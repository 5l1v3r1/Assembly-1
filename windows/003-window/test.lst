     1                                  ; BABY'S FIRST WINDOW
     2                                  ;
     3                                  ; Will display a blank window which you can min/max/resize, move, and close.
     4                                  ; The output could be more minimalist if you remove all the debug traces,
     5                                  ; but I decided to leave them in so future self would have a point of reference.
     6                                  ;
     7                                  ; I like the techniques used here because there are no dependency libraries,
     8                                  ; not even the C Standard lib (ie. MSVCRT). It just uses what Windows gives all
     9                                  ; programs by default with KERNEL32.DLL.
    10                                  ;
    11                                  ; The other thing you'll notice is test.js is effectively a NASM preprocessor
    12                                  ; alternative using modern JavaScript syntax (and utility libraries like lodash!)
    13                                  ; It is more efficient and less repetitive. I could have used any higher-level
    14                                  ; language to achieve this effect, but Node.JS just seemed close at hand.
    15                                  ; I am happy with the results and will probably continue using the approach,
    16                                  ; because its teaching me [by comparison] how the assembler works, and helping
    17                                  ; me look for optimizations to the whole process of writing code at this layer.
    18                                  ; Not to mention better support for these languages by modern IDEs!
    19                                  ;
    20                                  ; Build steps:
    21                                  ;
    22                                  ; npm install lodash
    23                                  ; node test.js # will overwrite test.nasm
    24                                  ; # update paths in build.sh to match your system and environment
    25                                  ; sh build.sh # will use NASM + LD to compile test.obj and test.exe
    26                                  ; cdb test.exe # nice command-line windows debugger
    27                                  ;
    28                                  
    29                                  ; build window
    30                                  extern GetModuleHandleA
    31                                  extern CreateMutexA
    32                                  extern LoadImageA
    33                                  extern RegisterClassExA
    34                                  extern CreateWindowExA
    35                                  
    36                                  ; main loop
    37                                  extern PeekMessageA
    38                                  extern TranslateMessage
    39                                  extern DispatchMessageA
    40                                  extern DefWindowProcA
    41                                  
    42                                  ; shutdown/cleanup
    43                                  extern DestroyWindow
    44                                  extern PostQuitMessage
    45                                  extern ExitProcess
    46                                  
    47                                  ; error handling
    48                                  extern SetLastError
    49                                  extern GetLastError
    50                                  extern FormatMessageA
    51                                  extern GetStdHandle
    52                                  extern WriteFile
    53                                  extern DebugBreakProcess
    54                                  
    55                                  section .data align=16
    56 00000000 00000000                GetLastError__errCode: dd 0
    57 00000004 00000000                Console__stderr_nStdHandle: dd 0
    58 00000008 00000000                Console__stdout_nStdHandle: dd 0
    59 0000000C 00<rept>                FormatMessage__tmpReturnBuffer: times 256 db 0
    60 0000010C 00000000                FormatMessage__tmpReturnBufferLength: dd 0
    61 00000110 00000000                DebugBreakProcess__success: dd 0
    62 00000114 00000000                Console__bytesWritten: dd 0
    63 00000118 65343464373534352D-     Generic__uuid: db "e44d7545-f9df-418e-bc37-11ad4535d32f",0
    63 00000121 663964662D34313865-
    63 0000012A 2D626333372D313161-
    63 00000133 643435333564333266-
    63 0000013C 00                 
    64 0000013D 0000000000000000        CreateMutexA__handle: dq 0
    65 00000145 0000000000000000        GetModuleHandleA__hModule: dq 0
    66 0000014D 0000000000000000        CreateWindow__icon: dq 0
    67 00000155 0000000000000000        CreateWindow__cursor: dq 0
    68                                  
    69                                  ; struct
    70                                  MainWindow_1: ; instanceof tagWNDCLASSEXA
    71 0000015D 50000000                MainWindow_1.cbSize dd 80 ; UINT
    72 00000161 23000000                MainWindow_1.style dd 0x23 ; UINT = CS_OWNDC | CS_VREDRAW | CS_HREDRAW
    73 00000165 [2705000000000000]      MainWindow_1.lpfnWndProc dq WndProc ; WNDPROC
    74 0000016D 00000000                MainWindow_1.cbClsExtra dd 0 ; int
    75 00000171 00000000                MainWindow_1.cbWndExtra dd 0 ; int
    76 00000175 [4501000000000000]      MainWindow_1.hInstance dq GetModuleHandleA__hModule ; HINSTANCE
    77 0000017D [4D01000000000000]      MainWindow_1.hIcon dq CreateWindow__icon ; HICON
    78 00000185 [5501000000000000]      MainWindow_1.hCursor dq CreateWindow__cursor ; HCURSOR
    79 0000018D 0500000000000000        MainWindow_1.hbrBackground dq 5 ; HBRUSH
    80 00000195 0000000000000000        MainWindow_1.lpszMenuName dq 0 ; LPCSTR
    81 0000019D [1801000000000000]      MainWindow_1.lpszClassName dq Generic__uuid ; LPCSTR
    82 000001A5 0000000000000000        MainWindow_1.hIconSm dq 0 ; HICON
    83                                  
    84 000001AD 0000000000000000        CreateWindow__atom_name: dq 0
    85 000001B5 0000000000000000        CreateWindow__hWnd: dq 0
    86 000001BD 57696E646F77204465-     CreateWindow__title: db "Window Demo",0
    86 000001C6 6D6F00             
    87                                  
    88                                  ; struct
    89                                  IncomingMessage_1: ; instanceof tagMSG
    90 000001C9 0000000000000000        IncomingMessage_1.hwnd dq 0 ; HWND
    91 000001D1 00000000                IncomingMessage_1.message dd 0 ; UINT
    92 000001D5 0000000000000000        IncomingMessage_1.wParam dq 0 ; WPARAM
    93 000001DD 0000000000000000        IncomingMessage_1.lParam dq 0 ; LPARAM
    94 000001E5 00000000                IncomingMessage_1.time dd 0 ; dword
    95 000001E9 00000000                IncomingMessage_1.pt.x dd 0 ; dword
    96 000001ED 00000000                IncomingMessage_1.pt.y dd 0 ; dword
    97 000001F1 00000000                IncomingMessage_1.lPrivate dd 0 ; dword
    98                                  
    99 000001F5 00000000                PeekMessage_hasMsgs: dd 0
   100 000001F9 5065656B4D65737361-     debug_trace_4: db "PeekMessageA has messages for CreateWindow__hWnd %1!.16llX!",10,0
   100 00000202 67654120686173206D-
   100 0000020B 657373616765732066-
   100 00000214 6F7220437265617465-
   100 0000021D 57696E646F775F5F68-
   100 00000226 576E64202531212E31-
   100 0000022F 366C6C58210A00     
   101 00000236 0000000000000000-       __trace_array: times 8 dq 0
   101 00000236 <rept>             
   102 00000276 0A4D65737361676520-     PeekMessage_msgIdFormatString: db 10,"Message received:",10,"  hwnd: %1!.16llX!",10,"  message: %2!.4llX!",10,"  wParam: %3!.16llX!",10,"  lParam: %4!.16llX!",10,"  time: %5!.16llX!",10,"  pt.x: %6!lu!",10,"  pt.y: 
   102 0000027F 72656365697665643A-
   102 00000288 0A202068776E643A20-
   102 00000291 2531212E31366C6C58-
   102 0000029A 210A20206D65737361-
   102 000002A3 67653A202532212E34-
   102 000002AC 6C6C58210A20207750-
   102 000002B5 6172616D3A20253321-
   102 000002BE 2E31366C6C58210A20-
   102 000002C7 206C506172616D3A20-
   102 000002D0 2534212E31366C6C58-
   102 000002D9 210A202074696D653A-
   102 000002E2 202535212E31366C6C-
   102 000002EB 58210A202070742E78-
   102 000002F4 3A202536216C75210A-
   102 000002FD 202070742E793A2025-
   102 00000306 37216C75210A20206C-
   102 0000030F 507269766174653A20-
   102 00000318 2538212E386C6C5821-
   102 00000321 0A00               
   103 00000323 574D5F515549542072-     debug_trace_1: db "WM_QUIT received by main Loop.",10,0
   103 0000032C 656365697665642062-
   103 00000335 79206D61696E204C6F-
   103 0000033E 6F702E0A00         
   104 00000343 5472616E736C617465-     debug_trace_5: db "TranslateMessage",10,0
   104 0000034C 4D6573736167650A00 
   105 00000355 44697370617463684D-     debug_trace_5a: db "DispatchMessageA",10,0
   105 0000035E 657373616765410A00 
   106 00000367 0000000000000000        nWndProc__hWnd: dq 0
   107 0000036F 0000000000000000        nWndProc__uMsg: dq 0
   108 00000377 0000000000000000        nWndProc__wParam: dq 0
   109 0000037F 0000000000000000        nWndProc__lParam: dq 0
   110 00000387 0000000000000000        nWndProc__return: dq 0
   111 0000038F 574D5F434C4F534520-     debug_trace_2: db "WM_CLOSE received by WndProc.",10,0
   111 00000398 726563656976656420-
   111 000003A1 627920576E6450726F-
   111 000003AA 632E0A00           
   112 000003AE 44657374726F795769-     debug_trace_7: db "DestroyWindow sent",10,0
   112 000003B7 6E646F772073656E74-
   112 000003C0 0A00               
   113 000003C2 574D5F44455354524F-     debug_trace_3: db "WM_DESTROY received by WndProc.",10,0
   113 000003CB 592072656365697665-
   113 000003D4 6420627920576E6450-
   113 000003DD 726F632E0A00       
   114 000003E3 506F7374517569744D-     debug_trace_8: db "PostQuitMessage sent",10,0
   114 000003EC 657373616765207365-
   114 000003F5 6E740A00           
   115                                  
   116                                  section .text align=16
   117                                  global main
   118                                  main:
   119                                  
   120                                  ; get pointers to stdout/stderr pipes
   121 00000000 E813080000              call near GetLastError__prologue_reset
   122                                  ; MS __fastcall x64 ABI
   123 00000005 4883EC28                sub rsp, 40 ; allocate shadow space
   124 00000009 B9F4FFFFFF              mov dword ecx, -12 ; 1st: DWORD nStdHandle = STD_ERROR_HANDLE
   125 0000000E E8(00000000)                call GetStdHandle
   126 00000013 890425[04000000]        mov dword [Console__stderr_nStdHandle], eax ; return 
   127 0000001A 4883C428                add rsp, 40 ; deallocate shadow space
   128 0000001E E808080000              call near GetLastError__epilogue_check
   129                                  
   130 00000023 E8F0070000              call near GetLastError__prologue_reset
   131                                  ; MS __fastcall x64 ABI
   132 00000028 4883EC28                sub rsp, 40 ; allocate shadow space
   133 0000002C B9F5FFFFFF              mov dword ecx, -11 ; 1st: DWORD nStdHandle = STD_OUTPUT_HANDLE
   134 00000031 E8(00000000)                call GetStdHandle
   135 00000036 890425[08000000]        mov dword [Console__stdout_nStdHandle], eax ; return 
   136 0000003D 4883C428                add rsp, 40 ; deallocate shadow space
   137 00000041 E8E5070000              call near GetLastError__epilogue_check
   138                                  
   139                                  
   140 00000046 E8CD070000              call near GetLastError__prologue_reset
   141                                  ; MS __fastcall x64 ABI
   142 0000004B 4883EC28                sub rsp, 40 ; allocate shadow space
   143 0000004F 41B8[18010000]          mov dword r8d, Generic__uuid ; 3rd: LPCSTR lpName
   144 00000055 BA01000000              mov dword edx, 1 ; 2nd: BOOL bInitialOwner
   145 0000005A B900000000              mov dword ecx, 0 ; 1st: LPSECURITY_ATTRIBUTES lpMutexAttributes
   146 0000005F E8(00000000)                call CreateMutexA
   147 00000064 48890425[3D010000]      mov qword [CreateMutexA__handle], rax ; return HANDLE
   148 0000006C 4883C428                add rsp, 40 ; deallocate shadow space
   149 00000070 E8B6070000              call near GetLastError__epilogue_check
   150                                  
   151 00000075 E89E070000              call near GetLastError__prologue_reset
   152                                  ; MS __fastcall x64 ABI
   153 0000007A 4883EC28                sub rsp, 40 ; allocate shadow space
   154 0000007E B900000000              mov dword ecx, 0 ; 1st: LPCSTR lpModuleName
   155 00000083 E8(00000000)                call GetModuleHandleA
   156 00000088 48890425[45010000]      mov qword [GetModuleHandleA__hModule], rax ; return HMODULE *phModule
   157 00000090 4883C428                add rsp, 40 ; deallocate shadow space
   158 00000094 E892070000              call near GetLastError__epilogue_check
   159                                  
   160 00000099 E87A070000              call near GetLastError__prologue_reset
   161                                  ; MS __fastcall x64 ABI
   162 0000009E 4883EC38                sub rsp, 56 ; allocate shadow space
   163 000000A2 C744242840800000        mov dword [rsp + 40], 0x8040 ; 6th: UINT fuLoad = LR_SHARED | LR_DEFAULTSIZE
   164 000000AA C744242000000000        mov dword [rsp + 32], 0 ; 5th: int cy
   165 000000B2 41B900000000            mov dword r9d, 0 ; 4th: int cx
   166 000000B8 41B801000000            mov dword r8d, 1 ; 3rd: UINT type = IMAGE_ICON
   167 000000BE BA057F0000              mov dword edx, 32517 ; 2nd: LPCSTR name = OIC_WINLOGO
   168 000000C3 B900000000              mov dword ecx, 0 ; 1st: HINSTANCE hInst
   169 000000C8 E8(00000000)                call LoadImageA
   170 000000CD 48890425[4D010000]      mov qword [CreateWindow__icon], rax ; return HANDLE
   171 000000D5 4883C438                add rsp, 56 ; deallocate shadow space
   172 000000D9 E84D070000              call near GetLastError__epilogue_check
   173                                  
   174 000000DE E835070000              call near GetLastError__prologue_reset
   175                                  ; MS __fastcall x64 ABI
   176 000000E3 4883EC38                sub rsp, 56 ; allocate shadow space
   177 000000E7 C744242840800000        mov dword [rsp + 40], 0x8040 ; 6th: UINT fuLoad = LR_SHARED | LR_DEFAULTSIZE
   178 000000EF C744242000000000        mov dword [rsp + 32], 0 ; 5th: int cy
   179 000000F7 41B900000000            mov dword r9d, 0 ; 4th: int cx
   180 000000FD 41B802000000            mov dword r8d, 2 ; 3rd: UINT type = IMAGE_CURSOR
   181 00000103 BA007F0000              mov dword edx, 32512 ; 2nd: LPCSTR name = IDC_ARROW
   182 00000108 B900000000              mov dword ecx, 0 ; 1st: HINSTANCE hInst
   183 0000010D E8(00000000)                call LoadImageA
   184 00000112 48890425[55010000]      mov qword [CreateWindow__cursor], rax ; return HANDLE
   185 0000011A 4883C438                add rsp, 56 ; deallocate shadow space
   186 0000011E E808070000              call near GetLastError__epilogue_check
   187                                  
   188 00000123 E8F0060000              call near GetLastError__prologue_reset
   189                                  ; MS __fastcall x64 ABI
   190 00000128 4883EC28                sub rsp, 40 ; allocate shadow space
   191 0000012C 48B9-                   mov qword rcx, MainWindow_1 ; 1st: WNDCLASSEXA *Arg1
   191 0000012E [5D01000000000000] 
   192 00000136 E8(00000000)                call RegisterClassExA
   193 0000013B 48890425[AD010000]      mov qword [CreateWindow__atom_name], rax ; return 
   194 00000143 4883C428                add rsp, 40 ; deallocate shadow space
   195 00000147 E8DF060000              call near GetLastError__epilogue_check
   196                                  
   197 0000014C E8C7060000              call near GetLastError__prologue_reset
   198                                  ; MS __fastcall x64 ABI
   199 00000151 4883EC68                sub rsp, 104 ; allocate shadow space
   200 00000155 48C744245800000000      mov qword [rsp + 88], 0 ; 12th: LPVOID lpParam
   201 0000015E 48C7442450-             mov qword [rsp + 80], GetModuleHandleA__hModule ; 11th: HINSTANCE hInstance
   201 00000163 [45010000]         
   202 00000167 48C744244800000000      mov qword [rsp + 72], 0 ; 10th: HMENU hMenu
   203 00000170 48C744244000000000      mov qword [rsp + 64], 0 ; 9th: HWND hWndParent
   204 00000179 C7442438E0010000        mov dword [rsp + 56], 480 ; 8th: int nHeight
   205 00000181 C744243080020000        mov dword [rsp + 48], 640 ; 7th: int nWidth
   206 00000189 C744242800000080        mov dword [rsp + 40], 0x80000000 ; 6th: int Y
   207 00000191 C744242000000080        mov dword [rsp + 32], 0x80000000 ; 5th: int X
   208 00000199 41B90000CF16            mov qword r9, 0x16cf0000 ; 4th: DWORD dwStyle = WS_OVERLAPPEDWINDOW | WS_VISIBLE | WS_CLIPCHILDREN | WS_CLIPSIBLINGS
   209 0000019F 49B8-                   mov qword r8, CreateWindow__title ; 3rd: LPCSTR lpWindowName
   209 000001A1 [BD01000000000000] 
   210 000001A9 48BA-                   mov qword rdx, Generic__uuid ; 2nd: LPCSTR lpClassName
   210 000001AB [1801000000000000] 
   211 000001B3 B900030000              mov qword rcx, 768 ; 1st: DWORD dwExStyle = WS_EX_OVERLAPPEDWINDOW
   212 000001B8 E8(00000000)                call CreateWindowExA
   213 000001BD 48890425[B5010000]      mov qword [CreateWindow__hWnd], rax ; return HWND
   214 000001C5 4883C468                add rsp, 104 ; deallocate shadow space
   215 000001C9 E85D060000              call near GetLastError__epilogue_check
   216                                  
   217                                  Loop:
   218 000001CE E845060000              call near GetLastError__prologue_reset
   219                                  ; MS __fastcall x64 ABI
   220 000001D3 4883EC30                sub rsp, 48 ; allocate shadow space
   221 000001D7 C744242001000000        mov dword [rsp + 32], 1 ; 5th: UINT wRemoveMsg = PM_REMOVE
   222 000001DF 41B900000000            mov dword r9d, 0 ; 4th: UINT wMsgFilterMax
   223 000001E5 41B800000000            mov dword r8d, 0 ; 3rd: UINT wMsgFilterMin
   224 000001EB 488B1425[B5010000]      mov qword rdx, [CreateWindow__hWnd] ; 2nd: HWND hWnd
   225 000001F3 48B9-                   mov qword rcx, IncomingMessage_1 ; 1st: LPMSG lpMsg
   225 000001F5 [C901000000000000] 
   226 000001FD E8(00000000)                call PeekMessageA
   227 00000202 890425[F5010000]        mov dword [PeekMessage_hasMsgs], eax ; return BOOL
   228 00000209 4883C430                add rsp, 48 ; deallocate shadow space
   229 0000020D E819060000              call near GetLastError__epilogue_check
   230                                  
   231 00000212 833C25[F5010000]00      cmp dword [PeekMessage_hasMsgs], 0 ; zero messages
   232 0000021A 0F84AEFFFFFF            je near Loop
   233                                  ; MS __fastcall x64 ABI
   234 00000220 4883EC40                sub rsp, 64 ; allocate shadow space
   235 00000224 48C7442430-             mov qword [rsp + 48], CreateWindow__hWnd ; 7th: va_list *Arguments
   235 00000229 [B5010000]         
   236 0000022D 48C744242800010000      mov qword [rsp + 40], 256 ; 6th: DWORD nSize
   237 00000236 48C7442420-             mov qword [rsp + 32], FormatMessage__tmpReturnBuffer ; 5th: LPSTR lpBuffer
   237 0000023B [0C000000]         
   238 0000023F 41B900000000            mov dword r9d, 0x0 ; 4th: DWORD dwLanguageId
   239 00000245 41B800000000            mov dword r8d, 0 ; 3rd: DWORD dwMessageId
   240 0000024B BA[F9010000]            mov dword edx, debug_trace_4 ; 2nd: LPCVOID lpSource
   241 00000250 B900240000              mov dword ecx, 0x2400 ; 1st: DWORD dwFlags
   242 00000255 E8(00000000)                call FormatMessageA
   243 0000025A 890425[0C010000]        mov dword [FormatMessage__tmpReturnBufferLength], eax ; return DWORD TCHARs written
   244 00000261 4883C440                add rsp, 64 ; deallocate shadow space
   245                                  
   246                                  ; MS __fastcall x64 ABI
   247 00000265 4883EC30                sub rsp, 48 ; allocate shadow space
   248 00000269 C744242000000000        mov dword [rsp + 32], 0 ; 5th: LPOVERLAPPED lpOverlapped
   249 00000271 41B9[14010000]          mov dword r9d, Console__bytesWritten ; 4th: LPDWORD lpNumberOfBytesWritten
   250 00000277 448B0425[0C010000]      mov dword r8d, [FormatMessage__tmpReturnBufferLength] ; 3rd: DWORD nNumberOfBytesToWrite
   251 0000027F BA[0C000000]            mov dword edx, FormatMessage__tmpReturnBuffer ; 2nd: LPCVOID lpBuffer
   252 00000284 8B0C25[08000000]        mov dword ecx, [Console__stdout_nStdHandle] ; 1st: HANDLE hFile
   253 0000028B E8(00000000)                call WriteFile
   254 00000290 4883C430                add rsp, 48 ; deallocate shadow space
   255                                  
   256 00000294 488B0425[C9010000]      mov qword rax, [IncomingMessage_1.hwnd]
   257 0000029C 48890425[36020000]      mov qword [__trace_array + 0], rax
   258 000002A4 8B0425[D1010000]        mov dword eax, [IncomingMessage_1.message]
   259 000002AB 890425[3E020000]        mov dword [__trace_array + 8], eax
   260 000002B2 488B0425[D5010000]      mov qword rax, [IncomingMessage_1.wParam]
   261 000002BA 48890425[46020000]      mov qword [__trace_array + 16], rax
   262 000002C2 488B0425[DD010000]      mov qword rax, [IncomingMessage_1.lParam]
   263 000002CA 48890425[4E020000]      mov qword [__trace_array + 24], rax
   264 000002D2 8B0425[E9010000]        mov dword eax, [IncomingMessage_1.pt.x]
   265 000002D9 890425[56020000]        mov dword [__trace_array + 32], eax
   266 000002E0 8B0425[ED010000]        mov dword eax, [IncomingMessage_1.pt.y]
   267 000002E7 890425[5E020000]        mov dword [__trace_array + 40], eax
   268 000002EE 8B0425[F1010000]        mov dword eax, [IncomingMessage_1.lPrivate]
   269 000002F5 890425[66020000]        mov dword [__trace_array + 48], eax
   270                                  ; MS __fastcall x64 ABI
   271 000002FC 4883EC40                sub rsp, 64 ; allocate shadow space
   272 00000300 48C7442430-             mov qword [rsp + 48], __trace_array ; 7th: va_list *Arguments
   272 00000305 [36020000]         
   273 00000309 48C744242800010000      mov qword [rsp + 40], 256 ; 6th: DWORD nSize
   274 00000312 48C7442420-             mov qword [rsp + 32], FormatMessage__tmpReturnBuffer ; 5th: LPSTR lpBuffer
   274 00000317 [0C000000]         
   275 0000031B 41B900000000            mov dword r9d, 0x0 ; 4th: DWORD dwLanguageId
   276 00000321 41B800000000            mov dword r8d, 0 ; 3rd: DWORD dwMessageId
   277 00000327 BA[76020000]            mov dword edx, PeekMessage_msgIdFormatString ; 2nd: LPCVOID lpSource
   278 0000032C B900240000              mov dword ecx, 0x2400 ; 1st: DWORD dwFlags
   279 00000331 E8(00000000)                call FormatMessageA
   280 00000336 890425[0C010000]        mov dword [FormatMessage__tmpReturnBufferLength], eax ; return DWORD TCHARs written
   281 0000033D 4883C440                add rsp, 64 ; deallocate shadow space
   282                                  
   283                                  ; MS __fastcall x64 ABI
   284 00000341 4883EC30                sub rsp, 48 ; allocate shadow space
   285 00000345 C744242000000000        mov dword [rsp + 32], 0 ; 5th: LPOVERLAPPED lpOverlapped
   286 0000034D 41B9[14010000]          mov dword r9d, Console__bytesWritten ; 4th: LPDWORD lpNumberOfBytesWritten
   287 00000353 448B0425[0C010000]      mov dword r8d, [FormatMessage__tmpReturnBufferLength] ; 3rd: DWORD nNumberOfBytesToWrite
   288 0000035B BA[0C000000]            mov dword edx, FormatMessage__tmpReturnBuffer ; 2nd: LPCVOID lpBuffer
   289 00000360 8B0C25[08000000]        mov dword ecx, [Console__stdout_nStdHandle] ; 1st: HANDLE hFile
   290 00000367 E8(00000000)                call WriteFile
   291 0000036C 4883C430                add rsp, 48 ; deallocate shadow space
   292                                  
   293 00000370 833C25[D1010000]12      cmp dword [IncomingMessage_1.message], 0x12 ; WM_QUIT
   294 00000378 0F857A000000            jne near ..@Loop__processMessage
   295                                  ; MS __fastcall x64 ABI
   296 0000037E 4883EC40                sub rsp, 64 ; allocate shadow space
   297 00000382 48C744243000000000      mov qword [rsp + 48], 0 ; 7th: va_list *Arguments
   298 0000038B 48C744242800010000      mov qword [rsp + 40], 256 ; 6th: DWORD nSize
   299 00000394 48C7442420-             mov qword [rsp + 32], FormatMessage__tmpReturnBuffer ; 5th: LPSTR lpBuffer
   299 00000399 [0C000000]         
   300 0000039D 41B900000000            mov dword r9d, 0x0 ; 4th: DWORD dwLanguageId
   301 000003A3 41B800000000            mov dword r8d, 0 ; 3rd: DWORD dwMessageId
   302 000003A9 BA[23030000]            mov dword edx, debug_trace_1 ; 2nd: LPCVOID lpSource
   303 000003AE B900240000              mov dword ecx, 0x2400 ; 1st: DWORD dwFlags
   304 000003B3 E8(00000000)                call FormatMessageA
   305 000003B8 890425[0C010000]        mov dword [FormatMessage__tmpReturnBufferLength], eax ; return DWORD TCHARs written
   306 000003BF 4883C440                add rsp, 64 ; deallocate shadow space
   307                                  
   308                                  ; MS __fastcall x64 ABI
   309 000003C3 4883EC30                sub rsp, 48 ; allocate shadow space
   310 000003C7 C744242000000000        mov dword [rsp + 32], 0 ; 5th: LPOVERLAPPED lpOverlapped
   311 000003CF 41B9[14010000]          mov dword r9d, Console__bytesWritten ; 4th: LPDWORD lpNumberOfBytesWritten
   312 000003D5 448B0425[0C010000]      mov dword r8d, [FormatMessage__tmpReturnBufferLength] ; 3rd: DWORD nNumberOfBytesToWrite
   313 000003DD BA[0C000000]            mov dword edx, FormatMessage__tmpReturnBuffer ; 2nd: LPCVOID lpBuffer
   314 000003E2 8B0C25[08000000]        mov dword ecx, [Console__stdout_nStdHandle] ; 1st: HANDLE hFile
   315 000003E9 E8(00000000)                call WriteFile
   316 000003EE 4883C430                add rsp, 48 ; deallocate shadow space
   317                                  
   318 000003F2 0F84D6FDFFFF            je near Loop
   319                                  ..@Loop__processMessage:
   320                                  ; MS __fastcall x64 ABI
   321 000003F8 4883EC40                sub rsp, 64 ; allocate shadow space
   322 000003FC 48C744243000000000      mov qword [rsp + 48], 0 ; 7th: va_list *Arguments
   323 00000405 48C744242800010000      mov qword [rsp + 40], 256 ; 6th: DWORD nSize
   324 0000040E 48C7442420-             mov qword [rsp + 32], FormatMessage__tmpReturnBuffer ; 5th: LPSTR lpBuffer
   324 00000413 [0C000000]         
   325 00000417 41B900000000            mov dword r9d, 0x0 ; 4th: DWORD dwLanguageId
   326 0000041D 41B800000000            mov dword r8d, 0 ; 3rd: DWORD dwMessageId
   327 00000423 BA[43030000]            mov dword edx, debug_trace_5 ; 2nd: LPCVOID lpSource
   328 00000428 B900240000              mov dword ecx, 0x2400 ; 1st: DWORD dwFlags
   329 0000042D E8(00000000)                call FormatMessageA
   330 00000432 890425[0C010000]        mov dword [FormatMessage__tmpReturnBufferLength], eax ; return DWORD TCHARs written
   331 00000439 4883C440                add rsp, 64 ; deallocate shadow space
   332                                  
   333                                  ; MS __fastcall x64 ABI
   334 0000043D 4883EC30                sub rsp, 48 ; allocate shadow space
   335 00000441 C744242000000000        mov dword [rsp + 32], 0 ; 5th: LPOVERLAPPED lpOverlapped
   336 00000449 41B9[14010000]          mov dword r9d, Console__bytesWritten ; 4th: LPDWORD lpNumberOfBytesWritten
   337 0000044F 448B0425[0C010000]      mov dword r8d, [FormatMessage__tmpReturnBufferLength] ; 3rd: DWORD nNumberOfBytesToWrite
   338 00000457 BA[0C000000]            mov dword edx, FormatMessage__tmpReturnBuffer ; 2nd: LPCVOID lpBuffer
   339 0000045C 8B0C25[08000000]        mov dword ecx, [Console__stdout_nStdHandle] ; 1st: HANDLE hFile
   340 00000463 E8(00000000)                call WriteFile
   341 00000468 4883C430                add rsp, 48 ; deallocate shadow space
   342                                  
   343 0000046C E8A7030000              call near GetLastError__prologue_reset
   344                                  ; MS __fastcall x64 ABI
   345 00000471 4883EC28                sub rsp, 40 ; allocate shadow space
   346 00000475 48B9-                   mov qword rcx, IncomingMessage_1 ; 1st: LPMSG lpMsg
   346 00000477 [C901000000000000] 
   347 0000047F E8(00000000)                call TranslateMessage
   348 00000484 4883C428                add rsp, 40 ; deallocate shadow space
   349 00000488 E89E030000              call near GetLastError__epilogue_check
   350                                  
   351                                  ; MS __fastcall x64 ABI
   352 0000048D 4883EC40                sub rsp, 64 ; allocate shadow space
   353 00000491 48C744243000000000      mov qword [rsp + 48], 0 ; 7th: va_list *Arguments
   354 0000049A 48C744242800010000      mov qword [rsp + 40], 256 ; 6th: DWORD nSize
   355 000004A3 48C7442420-             mov qword [rsp + 32], FormatMessage__tmpReturnBuffer ; 5th: LPSTR lpBuffer
   355 000004A8 [0C000000]         
   356 000004AC 41B900000000            mov dword r9d, 0x0 ; 4th: DWORD dwLanguageId
   357 000004B2 41B800000000            mov dword r8d, 0 ; 3rd: DWORD dwMessageId
   358 000004B8 BA[55030000]            mov dword edx, debug_trace_5a ; 2nd: LPCVOID lpSource
   359 000004BD B900240000              mov dword ecx, 0x2400 ; 1st: DWORD dwFlags
   360 000004C2 E8(00000000)                call FormatMessageA
   361 000004C7 890425[0C010000]        mov dword [FormatMessage__tmpReturnBufferLength], eax ; return DWORD TCHARs written
   362 000004CE 4883C440                add rsp, 64 ; deallocate shadow space
   363                                  
   364                                  ; MS __fastcall x64 ABI
   365 000004D2 4883EC30                sub rsp, 48 ; allocate shadow space
   366 000004D6 C744242000000000        mov dword [rsp + 32], 0 ; 5th: LPOVERLAPPED lpOverlapped
   367 000004DE 41B9[14010000]          mov dword r9d, Console__bytesWritten ; 4th: LPDWORD lpNumberOfBytesWritten
   368 000004E4 448B0425[0C010000]      mov dword r8d, [FormatMessage__tmpReturnBufferLength] ; 3rd: DWORD nNumberOfBytesToWrite
   369 000004EC BA[0C000000]            mov dword edx, FormatMessage__tmpReturnBuffer ; 2nd: LPCVOID lpBuffer
   370 000004F1 8B0C25[08000000]        mov dword ecx, [Console__stdout_nStdHandle] ; 1st: HANDLE hFile
   371 000004F8 E8(00000000)                call WriteFile
   372 000004FD 4883C430                add rsp, 48 ; deallocate shadow space
   373                                  
   374 00000501 E812030000              call near GetLastError__prologue_reset
   375                                  ; MS __fastcall x64 ABI
   376 00000506 4883EC28                sub rsp, 40 ; allocate shadow space
   377 0000050A 48B9-                   mov qword rcx, IncomingMessage_1 ; 1st: LPMSG lpMsg
   377 0000050C [C901000000000000] 
   378 00000514 E8(00000000)                call DispatchMessageA
   379 00000519 4883C428                add rsp, 40 ; deallocate shadow space
   380 0000051D E809030000              call near GetLastError__epilogue_check
   381                                  
   382 00000522 E9A7FCFFFF              jmp near Loop
   383                                  
   384                                  WndProc:
   385 00000527 48890C25[67030000]      mov qword [nWndProc__hWnd], rcx
   386 0000052F 48891425[6F030000]      mov qword [nWndProc__uMsg], rdx
   387 00000537 4C890425[77030000]      mov qword [nWndProc__wParam], r8
   388 0000053F 4C890C25[7F030000]      mov qword [nWndProc__lParam], r9
   389 00000547 4883FA06                cmp rdx, 0x6
   390 0000054B 0F8483000000            je near WndProc__WM_Activate
   391 00000551 4881FA12010000          cmp rdx, 0x112
   392 00000558 0F8479000000            je near WndProc__WM_SysCommand
   393 0000055E 4883FA10                cmp rdx, 0x10
   394 00000562 0F8496000000            je near WndProc__WM_Close
   395 00000568 4881FA00010000          cmp rdx, 0x100
   396 0000056F 0F849A020000            je near WndProc__WM_KeyDown
   397 00000575 4881FA01010000          cmp rdx, 0x101
   398 0000057C 0F8490020000            je near WndProc__WM_KeyUp
   399 00000582 4883FA05                cmp rdx, 0x5
   400 00000586 0F8489020000            je near WndProc__WM_Size
   401                                  ..@WndProc__default:
   402 0000058C E887020000              call near GetLastError__prologue_reset
   403                                  ; MS __fastcall x64 ABI
   404 00000591 4883EC28                sub rsp, 40 ; allocate shadow space
   405 00000595 4C8B0C25[7F030000]      mov qword r9, [nWndProc__lParam] ; 4th: 
   406 0000059D 4C8B0425[77030000]      mov qword r8, [nWndProc__wParam] ; 3rd: 
   407 000005A5 488B1425[6F030000]      mov qword rdx, [nWndProc__uMsg] ; 2nd: 
   408 000005AD 488B0C25[67030000]      mov qword rcx, [nWndProc__hWnd] ; 1st: 
   409 000005B5 E8(00000000)                call DefWindowProcA
   410 000005BA 48890425[87030000]      mov qword [nWndProc__return], rax ; return 
   411 000005C2 4883C428                add rsp, 40 ; deallocate shadow space
   412 000005C6 E860020000              call near GetLastError__epilogue_check
   413                                  
   414 000005CB 488B0425[87030000]      mov qword rax, [nWndProc__return]
   415 000005D3 C3                      ret
   416                                  WndProc__WM_Activate:
   417 000005D4 31C0                    xor eax, eax
   418 000005D6 C3                      ret
   419                                  WndProc__WM_SysCommand:
   420 000005D7 8B1C25[77030000]        mov ebx, [nWndProc__wParam]
   421 000005DE 81FB40F10000            cmp ebx, 0xf140
   422 000005E4 0F8411000000            je near ..@return_zero
   423 000005EA 81FB70F10000            cmp ebx, 0xf170
   424 000005F0 0F8405000000            je near ..@return_zero
   425 000005F6 E991FFFFFF              jmp near ..@WndProc__default
   426                                  ..@return_zero:
   427 000005FB 31C0                    xor eax, eax
   428 000005FD C3                      ret
   429                                  WndProc__WM_Close:
   430                                  ; MS __fastcall x64 ABI
   431 000005FE 4883EC40                sub rsp, 64 ; allocate shadow space
   432 00000602 48C744243000000000      mov qword [rsp + 48], 0 ; 7th: va_list *Arguments
   433 0000060B 48C744242800010000      mov qword [rsp + 40], 256 ; 6th: DWORD nSize
   434 00000614 48C7442420-             mov qword [rsp + 32], FormatMessage__tmpReturnBuffer ; 5th: LPSTR lpBuffer
   434 00000619 [0C000000]         
   435 0000061D 41B900000000            mov dword r9d, 0x0 ; 4th: DWORD dwLanguageId
   436 00000623 41B800000000            mov dword r8d, 0 ; 3rd: DWORD dwMessageId
   437 00000629 BA[8F030000]            mov dword edx, debug_trace_2 ; 2nd: LPCVOID lpSource
   438 0000062E B900240000              mov dword ecx, 0x2400 ; 1st: DWORD dwFlags
   439 00000633 E8(00000000)                call FormatMessageA
   440 00000638 890425[0C010000]        mov dword [FormatMessage__tmpReturnBufferLength], eax ; return DWORD TCHARs written
   441 0000063F 4883C440                add rsp, 64 ; deallocate shadow space
   442                                  
   443                                  ; MS __fastcall x64 ABI
   444 00000643 4883EC30                sub rsp, 48 ; allocate shadow space
   445 00000647 C744242000000000        mov dword [rsp + 32], 0 ; 5th: LPOVERLAPPED lpOverlapped
   446 0000064F 41B9[14010000]          mov dword r9d, Console__bytesWritten ; 4th: LPDWORD lpNumberOfBytesWritten
   447 00000655 448B0425[0C010000]      mov dword r8d, [FormatMessage__tmpReturnBufferLength] ; 3rd: DWORD nNumberOfBytesToWrite
   448 0000065D BA[0C000000]            mov dword edx, FormatMessage__tmpReturnBuffer ; 2nd: LPCVOID lpBuffer
   449 00000662 8B0C25[08000000]        mov dword ecx, [Console__stdout_nStdHandle] ; 1st: HANDLE hFile
   450 00000669 E8(00000000)                call WriteFile
   451 0000066E 4883C430                add rsp, 48 ; deallocate shadow space
   452                                  
   453 00000672 E8A1010000              call near GetLastError__prologue_reset
   454                                  ; MS __fastcall x64 ABI
   455 00000677 4883EC28                sub rsp, 40 ; allocate shadow space
   456 0000067B 488B0C25[B5010000]      mov qword rcx, [CreateWindow__hWnd] ; 1st: HWND hWnd
   457 00000683 E8(00000000)                call DestroyWindow
   458 00000688 4883C428                add rsp, 40 ; deallocate shadow space
   459 0000068C E89A010000              call near GetLastError__epilogue_check
   460                                  
   461                                  ; MS __fastcall x64 ABI
   462 00000691 4883EC40                sub rsp, 64 ; allocate shadow space
   463 00000695 48C744243000000000      mov qword [rsp + 48], 0 ; 7th: va_list *Arguments
   464 0000069E 48C744242800010000      mov qword [rsp + 40], 256 ; 6th: DWORD nSize
   465 000006A7 48C7442420-             mov qword [rsp + 32], FormatMessage__tmpReturnBuffer ; 5th: LPSTR lpBuffer
   465 000006AC [0C000000]         
   466 000006B0 41B900000000            mov dword r9d, 0x0 ; 4th: DWORD dwLanguageId
   467 000006B6 41B800000000            mov dword r8d, 0 ; 3rd: DWORD dwMessageId
   468 000006BC BA[AE030000]            mov dword edx, debug_trace_7 ; 2nd: LPCVOID lpSource
   469 000006C1 B900240000              mov dword ecx, 0x2400 ; 1st: DWORD dwFlags
   470 000006C6 E8(00000000)                call FormatMessageA
   471 000006CB 890425[0C010000]        mov dword [FormatMessage__tmpReturnBufferLength], eax ; return DWORD TCHARs written
   472 000006D2 4883C440                add rsp, 64 ; deallocate shadow space
   473                                  
   474                                  ; MS __fastcall x64 ABI
   475 000006D6 4883EC30                sub rsp, 48 ; allocate shadow space
   476 000006DA C744242000000000        mov dword [rsp + 32], 0 ; 5th: LPOVERLAPPED lpOverlapped
   477 000006E2 41B9[14010000]          mov dword r9d, Console__bytesWritten ; 4th: LPDWORD lpNumberOfBytesWritten
   478 000006E8 448B0425[0C010000]      mov dword r8d, [FormatMessage__tmpReturnBufferLength] ; 3rd: DWORD nNumberOfBytesToWrite
   479 000006F0 BA[0C000000]            mov dword edx, FormatMessage__tmpReturnBuffer ; 2nd: LPCVOID lpBuffer
   480 000006F5 8B0C25[08000000]        mov dword ecx, [Console__stdout_nStdHandle] ; 1st: HANDLE hFile
   481 000006FC E8(00000000)                call WriteFile
   482 00000701 4883C430                add rsp, 48 ; deallocate shadow space
   483                                  
   484 00000705 31C0                    xor eax, eax
   485 00000707 C3                      ret
   486                                  WndProc__WM_Destroy:
   487                                  ; MS __fastcall x64 ABI
   488 00000708 4883EC40                sub rsp, 64 ; allocate shadow space
   489 0000070C 48C744243000000000      mov qword [rsp + 48], 0 ; 7th: va_list *Arguments
   490 00000715 48C744242800010000      mov qword [rsp + 40], 256 ; 6th: DWORD nSize
   491 0000071E 48C7442420-             mov qword [rsp + 32], FormatMessage__tmpReturnBuffer ; 5th: LPSTR lpBuffer
   491 00000723 [0C000000]         
   492 00000727 41B900000000            mov dword r9d, 0x0 ; 4th: DWORD dwLanguageId
   493 0000072D 41B800000000            mov dword r8d, 0 ; 3rd: DWORD dwMessageId
   494 00000733 BA[C2030000]            mov dword edx, debug_trace_3 ; 2nd: LPCVOID lpSource
   495 00000738 B900240000              mov dword ecx, 0x2400 ; 1st: DWORD dwFlags
   496 0000073D E8(00000000)                call FormatMessageA
   497 00000742 890425[0C010000]        mov dword [FormatMessage__tmpReturnBufferLength], eax ; return DWORD TCHARs written
   498 00000749 4883C440                add rsp, 64 ; deallocate shadow space
   499                                  
   500                                  ; MS __fastcall x64 ABI
   501 0000074D 4883EC30                sub rsp, 48 ; allocate shadow space
   502 00000751 C744242000000000        mov dword [rsp + 32], 0 ; 5th: LPOVERLAPPED lpOverlapped
   503 00000759 41B9[14010000]          mov dword r9d, Console__bytesWritten ; 4th: LPDWORD lpNumberOfBytesWritten
   504 0000075F 448B0425[0C010000]      mov dword r8d, [FormatMessage__tmpReturnBufferLength] ; 3rd: DWORD nNumberOfBytesToWrite
   505 00000767 BA[0C000000]            mov dword edx, FormatMessage__tmpReturnBuffer ; 2nd: LPCVOID lpBuffer
   506 0000076C 8B0C25[08000000]        mov dword ecx, [Console__stdout_nStdHandle] ; 1st: HANDLE hFile
   507 00000773 E8(00000000)                call WriteFile
   508 00000778 4883C430                add rsp, 48 ; deallocate shadow space
   509                                  
   510 0000077C E897000000              call near GetLastError__prologue_reset
   511                                  ; MS __fastcall x64 ABI
   512 00000781 4883EC28                sub rsp, 40 ; allocate shadow space
   513 00000785 B900000000              mov dword ecx, 0 ; 1st: int nExitCode
   514 0000078A E8(00000000)                call PostQuitMessage
   515 0000078F 4883C428                add rsp, 40 ; deallocate shadow space
   516 00000793 E893000000              call near GetLastError__epilogue_check
   517                                  
   518                                  ; MS __fastcall x64 ABI
   519 00000798 4883EC40                sub rsp, 64 ; allocate shadow space
   520 0000079C 48C744243000000000      mov qword [rsp + 48], 0 ; 7th: va_list *Arguments
   521 000007A5 48C744242800010000      mov qword [rsp + 40], 256 ; 6th: DWORD nSize
   522 000007AE 48C7442420-             mov qword [rsp + 32], FormatMessage__tmpReturnBuffer ; 5th: LPSTR lpBuffer
   522 000007B3 [0C000000]         
   523 000007B7 41B900000000            mov dword r9d, 0x0 ; 4th: DWORD dwLanguageId
   524 000007BD 41B800000000            mov dword r8d, 0 ; 3rd: DWORD dwMessageId
   525 000007C3 BA[E3030000]            mov dword edx, debug_trace_8 ; 2nd: LPCVOID lpSource
   526 000007C8 B900240000              mov dword ecx, 0x2400 ; 1st: DWORD dwFlags
   527 000007CD E8(00000000)                call FormatMessageA
   528 000007D2 890425[0C010000]        mov dword [FormatMessage__tmpReturnBufferLength], eax ; return DWORD TCHARs written
   529 000007D9 4883C440                add rsp, 64 ; deallocate shadow space
   530                                  
   531                                  ; MS __fastcall x64 ABI
   532 000007DD 4883EC30                sub rsp, 48 ; allocate shadow space
   533 000007E1 C744242000000000        mov dword [rsp + 32], 0 ; 5th: LPOVERLAPPED lpOverlapped
   534 000007E9 41B9[14010000]          mov dword r9d, Console__bytesWritten ; 4th: LPDWORD lpNumberOfBytesWritten
   535 000007EF 448B0425[0C010000]      mov dword r8d, [FormatMessage__tmpReturnBufferLength] ; 3rd: DWORD nNumberOfBytesToWrite
   536 000007F7 BA[0C000000]            mov dword edx, FormatMessage__tmpReturnBuffer ; 2nd: LPCVOID lpBuffer
   537 000007FC 8B0C25[08000000]        mov dword ecx, [Console__stdout_nStdHandle] ; 1st: HANDLE hFile
   538 00000803 E8(00000000)                call WriteFile
   539 00000808 4883C430                add rsp, 48 ; deallocate shadow space
   540                                  
   541 0000080C 31C0                    xor eax, eax
   542 0000080E C3                      ret
   543                                  WndProc__WM_KeyDown:
   544 0000080F 31C0                    xor eax, eax
   545 00000811 C3                      ret
   546                                  WndProc__WM_KeyUp:
   547 00000812 31C0                    xor eax, eax
   548 00000814 C3                      ret
   549                                  WndProc__WM_Size:
   550 00000815 31C0                    xor eax, eax
   551 00000817 C3                      ret
   552                                  
   553                                  GetLastError__prologue_reset:
   554                                  ; MS __fastcall x64 ABI
   555 00000818 4883EC28                sub rsp, 40 ; allocate shadow space
   556 0000081C B900000000              mov dword ecx, 0 ; 1st: DWORD dwErrCode
   557 00000821 E8(00000000)                call SetLastError
   558 00000826 4883C428                add rsp, 40 ; deallocate shadow space
   559 0000082A C3                      ret
   560                                  
   561                                  GetLastError__epilogue_check:
   562                                  ; MS __fastcall x64 ABI
   563 0000082B 4883EC28                sub rsp, 40 ; allocate shadow space
   564 0000082F E8(00000000)                call GetLastError
   565 00000834 890425[00000000]        mov dword [GetLastError__errCode], eax ; return 
   566 0000083B 4883C428                add rsp, 40 ; deallocate shadow space
   567 0000083F 4883F800                cmp rax, 0
   568 00000843 7501                    jne ..@error
   569 00000845 C3                      ret
   570                                  
   571                                  ..@error:
   572                                  ; MS __fastcall x64 ABI
   573 00000846 4883EC40                sub rsp, 64 ; allocate shadow space
   574 0000084A 48C744243000000000      mov qword [rsp + 48], 0 ; 7th: va_list *Arguments
   575 00000853 48C744242800010000      mov qword [rsp + 40], 256 ; 6th: DWORD nSize
   576 0000085C 48C7442420-             mov qword [rsp + 32], FormatMessage__tmpReturnBuffer ; 5th: LPSTR lpBuffer
   576 00000861 [0C000000]         
   577 00000865 41B900040000            mov dword r9d, 0x400 ; 4th: DWORD dwLanguageId
   578 0000086B 448B0425[00000000]      mov dword r8d, [GetLastError__errCode] ; 3rd: DWORD dwMessageId
   579 00000873 BA00000000              mov dword edx, 0 ; 2nd: LPCVOID lpSource
   580 00000878 B900120000              mov dword ecx, 0x1200 ; 1st: DWORD dwFlags
   581 0000087D E8(00000000)                call FormatMessageA
   582 00000882 890425[0C010000]        mov dword [FormatMessage__tmpReturnBufferLength], eax ; return DWORD TCHARs written
   583 00000889 4883C440                add rsp, 64 ; deallocate shadow space
   584                                  
   585                                  ; MS __fastcall x64 ABI
   586 0000088D 4883EC30                sub rsp, 48 ; allocate shadow space
   587 00000891 C744242000000000        mov dword [rsp + 32], 0 ; 5th: LPOVERLAPPED lpOverlapped
   588 00000899 41B9[14010000]          mov dword r9d, Console__bytesWritten ; 4th: LPDWORD lpNumberOfBytesWritten
   589 0000089F 448B0425[0C010000]      mov dword r8d, [FormatMessage__tmpReturnBufferLength] ; 3rd: DWORD nNumberOfBytesToWrite
   590 000008A7 BA[0C000000]            mov dword edx, FormatMessage__tmpReturnBuffer ; 2nd: LPCVOID lpBuffer
   591 000008AC 8B0C25[08000000]        mov dword ecx, [Console__stdout_nStdHandle] ; 1st: HANDLE hFile
   592 000008B3 E8(00000000)                call WriteFile
   593 000008B8 4883C430                add rsp, 48 ; deallocate shadow space
   594                                  
   595 000008BC 8B0C25[00000000]        mov ecx, [GetLastError__errCode] ; UINT uExitCode
   596 000008C3 E900000000              jmp near Exit
   597                                  
   598                                  Exit:
   599                                  ; MS __fastcall x64 ABI
   600 000008C8 4883EC28                sub rsp, 40 ; allocate shadow space
   601 000008CC E8(00000000)                call ExitProcess
   602 000008D1 4883C428                add rsp, 40 ; deallocate shadow space
   603                                  
   604                                  

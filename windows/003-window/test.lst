     1                                  ; build window
     2                                  extern GetModuleHandleA
     3                                  extern CreateMutexA
     4                                  extern LoadImageA
     5                                  extern RegisterClassExA
     6                                  extern CreateWindowExA
     7                                  
     8                                  ; main loop
     9                                  extern PeekMessageA
    10                                  extern TranslateMessage
    11                                  extern DispatchMessageA
    12                                  extern DefWindowProcA
    13                                  extern PostQuitMessage
    14                                  
    15                                  ; shutdown/cleanup
    16                                  extern ExitProcess
    17                                  
    18                                  ; error handling
    19                                  extern SetLastError
    20                                  extern GetLastError
    21                                  extern FormatMessageA
    22                                  extern GetStdHandle
    23                                  extern WriteFile
    24                                  
    25                                  section .data align=16
    26 00000000 00000000                GetLastError__errCode: dd 0
    27 00000004 00000000                Console__stderr_nStdHandle: dd 0
    28 00000008 00000000                Console__stdout_nStdHandle: dd 0
    29 0000000C 00<rept>                FormatMessage__tmpReturnBuffer: times 256 db 0
    30 0000010C 00000000                FormatMessage__tmpReturnBufferLength: dd 0
    31 00000110 00000000                Console__bytesWritten: dd 0
    32 00000114 65343464373534352D-     Generic__uuid: db "e44d7545-f9df-418e-bc37-11ad4535d32f",0
    32 0000011D 663964662D34313865-
    32 00000126 2D626333372D313161-
    32 0000012F 643435333564333266-
    32 00000138 00                 
    33 00000139 0000000000000000        CreateMutexA__handle: dq 0
    34 00000141 0000000000000000        GetModuleHandleA__hModule: dq 0
    35 00000149 0000000000000000        CreateWindow__icon: dq 0
    36 00000151 0000000000000000        CreateWindow__cursor: dq 0
    37                                  
    38                                  ; struct
    39                                  MainWindow_1: ; instanceof tagWNDCLASSEXA
    40 00000159 50000000                MainWindow_1.cbSize dd 80 ; UINT
    41 0000015D 23000000                MainWindow_1.style dd 0x23 ; UINT = CS_OWNDC | CS_VREDRAW | CS_HREDRAW
    42 00000161 [D003000000000000]      MainWindow_1.lpfnWndProc dq WndProc ; WNDPROC
    43 00000169 00000000                MainWindow_1.cbClsExtra dd 0 ; int
    44 0000016D 00000000                MainWindow_1.cbWndExtra dd 0 ; int
    45 00000171 [4101000000000000]      MainWindow_1.hInstance dq GetModuleHandleA__hModule ; HINSTANCE
    46 00000179 [4901000000000000]      MainWindow_1.hIcon dq CreateWindow__icon ; HICON
    47 00000181 [5101000000000000]      MainWindow_1.hCursor dq CreateWindow__cursor ; HCURSOR
    48 00000189 0500000000000000        MainWindow_1.hbrBackground dq 5 ; HBRUSH
    49 00000191 0000000000000000        MainWindow_1.lpszMenuName dq 0 ; LPCSTR
    50 00000199 [1401000000000000]      MainWindow_1.lpszClassName dq Generic__uuid ; LPCSTR
    51 000001A1 0000000000000000        MainWindow_1.hIconSm dq 0 ; HICON
    52                                  
    53 000001A9 0000000000000000        CreateWindow__atom_name: dq 0
    54 000001B1 0000000000000000        CreateWindow__hwnd: dq 0
    55 000001B9 4F70656E474C204465-     CreateWindow__title: db "OpenGL Demo",0
    55 000001C2 6D6F00             
    56                                  
    57                                  ; struct
    58                                  IncomingMessage_1: ; instanceof tagMSG
    59 000001C5 0000000000000000        IncomingMessage_1.hwnd dq 0 ; HWND
    60 000001CD 00000000                IncomingMessage_1.message dd 0 ; UINT
    61 000001D1 0000000000000000        IncomingMessage_1.wParam dq 0 ; WPARAM
    62 000001D9 0000000000000000        IncomingMessage_1.lParam dq 0 ; LPARAM
    63 000001E1 00000000                IncomingMessage_1.time dd 0 ; dword
    64 000001E5 00000000                IncomingMessage_1.pt.x dd 0 ; dword
    65 000001E9 00000000                IncomingMessage_1.pt.y dd 0 ; dword
    66 000001ED 00000000                IncomingMessage_1.lPrivate dd 0 ; dword
    67                                  
    68 000001F1 00<rept>                padding: times 4 db 0 ; not sure why padding is needed here but must find out proper alignment: db 0
    69 000001F5 2E                      dot: db "."
    70 000001F6 2D                      dash: db "-"
    71 000001F7 00000000                PeekMessage_hasMsgs: dd 0
    72 000001FB 0000000000000000-       __trace_array: times 8 dq 0
    72 000001FB <rept>             
    73 0000023B 0A4D65737361676520-     PeekMessage_msgIdFormatString: db 10,"Message received:",10,"  hwnd: %1!.16llX!",10,"  message: %2!.4llX!",10,"  wParam: %3!.16llX!",10,"  lParam: %4!.16llX!",10,"  time: %5!.16llX!",10,"  pt.x: %6!lu!",10,"  pt.y: 
    73 00000244 72656365697665643A-
    73 0000024D 0A202068776E643A20-
    73 00000256 2531212E31366C6C58-
    73 0000025F 210A20206D65737361-
    73 00000268 67653A202532212E34-
    73 00000271 6C6C58210A20207750-
    73 0000027A 6172616D3A20253321-
    73 00000283 2E31366C6C58210A20-
    73 0000028C 206C506172616D3A20-
    73 00000295 2534212E31366C6C58-
    73 0000029E 210A202074696D653A-
    73 000002A7 202535212E31366C6C-
    73 000002B0 58210A202070742E78-
    73 000002B9 3A202536216C75210A-
    73 000002C2 202070742E793A2025-
    73 000002CB 37216C75210A20206C-
    73 000002D4 507269766174653A20-
    73 000002DD 2538212E386C6C5821-
    73 000002E6 0A00               
    74 000002E8 574D5F515549542072-     debug_trace_1: db "WM_QUIT received by main Loop.",10,0
    74 000002F1 656365697665642062-
    74 000002FA 79206D61696E204C6F-
    74 00000303 6F702E0A00         
    75 00000308 0000000000000000        nWndProc__hWnd: dq 0
    76 00000310 0000000000000000        nWndProc__uMsg: dq 0
    77 00000318 0000000000000000        nWndProc__wParam: dq 0
    78 00000320 0000000000000000        nWndProc__lParam: dq 0
    79 00000328 0000000000000000        nWndProc__return: dq 0
    80 00000330 574D5F44455354524F-     debug_trace_3: db "WM_DESTROY received by WndProc.",10,0
    80 00000339 592072656365697665-
    80 00000342 6420627920576E6450-
    80 0000034B 726F632E0A00       
    81 00000351 574D5F434C4F534520-     debug_trace_2: db "WM_CLOSE received by WndProc.",10,0
    81 0000035A 726563656976656420-
    81 00000363 627920576E6450726F-
    81 0000036C 632E0A00           
    82                                  
    83                                  section .text align=16
    84                                  global main
    85                                  main:
    86                                  
    87                                  
    88                                  ; get pointers to stdout/stderr pipes
    89 00000000 E8BF050000              call near GetLastError__prologue_reset
    90                                  ; MS __fastcall x64 ABI
    91 00000005 4883EC28                sub rsp, 40 ; allocate shadow space
    92 00000009 B9F4FFFFFF              mov dword ecx, -12 ; 1st: DWORD nStdHandle = STD_ERROR_HANDLE
    93 0000000E E8(00000000)                call GetStdHandle
    94 00000013 890425[04000000]        mov dword [Console__stderr_nStdHandle], eax ; return 
    95 0000001A 4883C428                add rsp, 40 ; deallocate shadow space
    96 0000001E E8B4050000              call near GetLastError__epilogue_check
    97                                  
    98 00000023 E89C050000              call near GetLastError__prologue_reset
    99                                  ; MS __fastcall x64 ABI
   100 00000028 4883EC28                sub rsp, 40 ; allocate shadow space
   101 0000002C B9F5FFFFFF              mov dword ecx, -11 ; 1st: DWORD nStdHandle = STD_OUTPUT_HANDLE
   102 00000031 E8(00000000)                call GetStdHandle
   103 00000036 890425[08000000]        mov dword [Console__stdout_nStdHandle], eax ; return 
   104 0000003D 4883C428                add rsp, 40 ; deallocate shadow space
   105 00000041 E891050000              call near GetLastError__epilogue_check
   106                                  
   107                                  
   108 00000046 E879050000              call near GetLastError__prologue_reset
   109                                  ; MS __fastcall x64 ABI
   110 0000004B 4883EC28                sub rsp, 40 ; allocate shadow space
   111 0000004F 41B8[14010000]          mov dword r8d, Generic__uuid ; 3rd: LPCSTR lpName
   112 00000055 BA01000000              mov dword edx, 1 ; 2nd: BOOL bInitialOwner
   113 0000005A B900000000              mov dword ecx, 0 ; 1st: LPSECURITY_ATTRIBUTES lpMutexAttributes
   114 0000005F E8(00000000)                call CreateMutexA
   115 00000064 48890425[39010000]      mov qword [CreateMutexA__handle], rax ; return HANDLE
   116 0000006C 4883C428                add rsp, 40 ; deallocate shadow space
   117 00000070 E862050000              call near GetLastError__epilogue_check
   118                                  
   119 00000075 E84A050000              call near GetLastError__prologue_reset
   120                                  ; MS __fastcall x64 ABI
   121 0000007A 4883EC28                sub rsp, 40 ; allocate shadow space
   122 0000007E B900000000              mov dword ecx, 0 ; 1st: LPCSTR lpModuleName
   123 00000083 E8(00000000)                call GetModuleHandleA
   124 00000088 48890425[41010000]      mov qword [GetModuleHandleA__hModule], rax ; return HMODULE *phModule
   125 00000090 4883C428                add rsp, 40 ; deallocate shadow space
   126 00000094 E83E050000              call near GetLastError__epilogue_check
   127                                  
   128 00000099 E826050000              call near GetLastError__prologue_reset
   129                                  ; MS __fastcall x64 ABI
   130 0000009E 4883EC38                sub rsp, 56 ; allocate shadow space
   131 000000A2 C744242840800000        mov dword [rsp + 40], 0x8040 ; 6th: UINT fuLoad = LR_SHARED | LR_DEFAULTSIZE
   132 000000AA C744242000000000        mov dword [rsp + 32], 0 ; 5th: int cy
   133 000000B2 41B900000000            mov dword r9d, 0 ; 4th: int cx
   134 000000B8 41B801000000            mov dword r8d, 1 ; 3rd: UINT type = IMAGE_ICON
   135 000000BE BA057F0000              mov dword edx, 32517 ; 2nd: LPCSTR name = OIC_WINLOGO
   136 000000C3 B900000000              mov dword ecx, 0 ; 1st: HINSTANCE hInst
   137 000000C8 E8(00000000)                call LoadImageA
   138 000000CD 48890425[49010000]      mov qword [CreateWindow__icon], rax ; return HANDLE
   139 000000D5 4883C438                add rsp, 56 ; deallocate shadow space
   140 000000D9 E8F9040000              call near GetLastError__epilogue_check
   141                                  
   142 000000DE E8E1040000              call near GetLastError__prologue_reset
   143                                  ; MS __fastcall x64 ABI
   144 000000E3 4883EC38                sub rsp, 56 ; allocate shadow space
   145 000000E7 C744242840800000        mov dword [rsp + 40], 0x8040 ; 6th: UINT fuLoad = LR_SHARED | LR_DEFAULTSIZE
   146 000000EF C744242000000000        mov dword [rsp + 32], 0 ; 5th: int cy
   147 000000F7 41B900000000            mov dword r9d, 0 ; 4th: int cx
   148 000000FD 41B802000000            mov dword r8d, 2 ; 3rd: UINT type = IMAGE_CURSOR
   149 00000103 BA007F0000              mov dword edx, 32512 ; 2nd: LPCSTR name = IDC_ARROW
   150 00000108 B900000000              mov dword ecx, 0 ; 1st: HINSTANCE hInst
   151 0000010D E8(00000000)                call LoadImageA
   152 00000112 48890425[51010000]      mov qword [CreateWindow__cursor], rax ; return HANDLE
   153 0000011A 4883C438                add rsp, 56 ; deallocate shadow space
   154 0000011E E8B4040000              call near GetLastError__epilogue_check
   155                                  
   156 00000123 E89C040000              call near GetLastError__prologue_reset
   157                                  ; MS __fastcall x64 ABI
   158 00000128 4883EC28                sub rsp, 40 ; allocate shadow space
   159 0000012C 48B9-                   mov qword rcx, MainWindow_1 ; 1st: WNDCLASSEXA *Arg1
   159 0000012E [5901000000000000] 
   160 00000136 E8(00000000)                call RegisterClassExA
   161 0000013B 48890425[A9010000]      mov qword [CreateWindow__atom_name], rax ; return 
   162 00000143 4883C428                add rsp, 40 ; deallocate shadow space
   163 00000147 E88B040000              call near GetLastError__epilogue_check
   164                                  
   165 0000014C E873040000              call near GetLastError__prologue_reset
   166                                  ; MS __fastcall x64 ABI
   167 00000151 4883EC68                sub rsp, 104 ; allocate shadow space
   168 00000155 48C744245800000000      mov qword [rsp + 88], 0 ; 12th: LPVOID lpParam
   169 0000015E 48C7442450-             mov qword [rsp + 80], GetModuleHandleA__hModule ; 11th: HINSTANCE hInstance
   169 00000163 [41010000]         
   170 00000167 48C744244800000000      mov qword [rsp + 72], 0 ; 10th: HMENU hMenu
   171 00000170 48C744244000000000      mov qword [rsp + 64], 0 ; 9th: HWND hWndParent
   172 00000179 C7442438E0010000        mov dword [rsp + 56], 480 ; 8th: int nHeight
   173 00000181 C744243080020000        mov dword [rsp + 48], 640 ; 7th: int nWidth
   174 00000189 C744242800000080        mov dword [rsp + 40], 0x80000000 ; 6th: int Y
   175 00000191 C744242000000080        mov dword [rsp + 32], 0x80000000 ; 5th: int X
   176 00000199 41B90000CF16            mov qword r9, 0x16cf0000 ; 4th: DWORD dwStyle = WS_OVERLAPPEDWINDOW | WS_VISIBLE | WS_CLIPCHILDREN | WS_CLIPSIBLINGS
   177 0000019F 49B8-                   mov qword r8, CreateWindow__title ; 3rd: LPCSTR lpWindowName
   177 000001A1 [B901000000000000] 
   178 000001A9 48BA-                   mov qword rdx, Generic__uuid ; 2nd: LPCSTR lpClassName
   178 000001AB [1401000000000000] 
   179 000001B3 B900030000              mov qword rcx, 768 ; 1st: DWORD dwExStyle = WS_EX_OVERLAPPEDWINDOW
   180 000001B8 E8(00000000)                call CreateWindowExA
   181 000001BD 48890425[B1010000]      mov qword [CreateWindow__hwnd], rax ; return HWND
   182 000001C5 4883C468                add rsp, 104 ; deallocate shadow space
   183 000001C9 E809040000              call near GetLastError__epilogue_check
   184                                  
   185                                  Loop:
   186 000001CE E8F1030000              call near GetLastError__prologue_reset
   187                                  ; MS __fastcall x64 ABI
   188 000001D3 4883EC30                sub rsp, 48 ; allocate shadow space
   189 000001D7 C744242001000000        mov dword [rsp + 32], 1 ; 5th: UINT wRemoveMsg = PM_REMOVE
   190 000001DF 41B900000000            mov dword r9d, 0 ; 4th: UINT wMsgFilterMax
   191 000001E5 41B800000000            mov dword r8d, 0 ; 3rd: UINT wMsgFilterMin
   192 000001EB 488B1425[B1010000]      mov qword rdx, [CreateWindow__hwnd] ; 2nd: HWND hWnd
   193 000001F3 48B9-                   mov qword rcx, IncomingMessage_1 ; 1st: LPMSG lpMsg
   193 000001F5 [C501000000000000] 
   194 000001FD E8(00000000)                call PeekMessageA
   195 00000202 890425[F7010000]        mov dword [PeekMessage_hasMsgs], eax ; return BOOL
   196 00000209 4883C430                add rsp, 48 ; deallocate shadow space
   197 0000020D E8C5030000              call near GetLastError__epilogue_check
   198                                  
   199 00000212 833C25[F7010000]00      cmp dword [PeekMessage_hasMsgs], 0 ; zero messages
   200 0000021A 0F84AEFFFFFF            je near Loop
   201 00000220 488B0425[C5010000]      mov qword rax, [IncomingMessage_1.hwnd]
   202 00000228 48890425[FB010000]      mov qword [__trace_array + 0], rax
   203 00000230 8B0425[CD010000]        mov dword eax, [IncomingMessage_1.message]
   204 00000237 890425[03020000]        mov dword [__trace_array + 8], eax
   205 0000023E 488B0425[D1010000]      mov qword rax, [IncomingMessage_1.wParam]
   206 00000246 48890425[0B020000]      mov qword [__trace_array + 16], rax
   207 0000024E 488B0425[D9010000]      mov qword rax, [IncomingMessage_1.lParam]
   208 00000256 48890425[13020000]      mov qword [__trace_array + 24], rax
   209 0000025E 8B0425[E5010000]        mov dword eax, [IncomingMessage_1.pt.x]
   210 00000265 890425[1B020000]        mov dword [__trace_array + 32], eax
   211 0000026C 8B0425[E9010000]        mov dword eax, [IncomingMessage_1.pt.y]
   212 00000273 890425[23020000]        mov dword [__trace_array + 40], eax
   213 0000027A 8B0425[ED010000]        mov dword eax, [IncomingMessage_1.lPrivate]
   214 00000281 890425[2B020000]        mov dword [__trace_array + 48], eax
   215                                  ; MS __fastcall x64 ABI
   216 00000288 4883EC40                sub rsp, 64 ; allocate shadow space
   217 0000028C 48C7442430-             mov qword [rsp + 48], __trace_array ; 7th: va_list *Arguments
   217 00000291 [FB010000]         
   218 00000295 48C744242800010000      mov qword [rsp + 40], 256 ; 6th: DWORD nSize
   219 0000029E 48C7442420-             mov qword [rsp + 32], FormatMessage__tmpReturnBuffer ; 5th: LPSTR lpBuffer
   219 000002A3 [0C000000]         
   220 000002A7 41B900000000            mov dword r9d, 0x0 ; 4th: DWORD dwLanguageId
   221 000002AD 41B800000000            mov dword r8d, 0 ; 3rd: DWORD dwMessageId
   222 000002B3 BA[3B020000]            mov dword edx, PeekMessage_msgIdFormatString ; 2nd: LPCVOID lpSource
   223 000002B8 B900240000              mov dword ecx, 0x2400 ; 1st: DWORD dwFlags
   224 000002BD E8(00000000)                call FormatMessageA
   225 000002C2 890425[0C010000]        mov dword [FormatMessage__tmpReturnBufferLength], eax ; return DWORD TCHARs written
   226 000002C9 4883C440                add rsp, 64 ; deallocate shadow space
   227                                  
   228                                  ; MS __fastcall x64 ABI
   229 000002CD 4883EC30                sub rsp, 48 ; allocate shadow space
   230 000002D1 C744242000000000        mov dword [rsp + 32], 0 ; 5th: LPOVERLAPPED lpOverlapped
   231 000002D9 41B9[10010000]          mov dword r9d, Console__bytesWritten ; 4th: LPDWORD lpNumberOfBytesWritten
   232 000002DF 448B0425[0C010000]      mov dword r8d, [FormatMessage__tmpReturnBufferLength] ; 3rd: DWORD nNumberOfBytesToWrite
   233 000002E7 BA[0C000000]            mov dword edx, FormatMessage__tmpReturnBuffer ; 2nd: LPCVOID lpBuffer
   234 000002EC 8B0C25[08000000]        mov dword ecx, [Console__stdout_nStdHandle] ; 1st: HANDLE hFile
   235 000002F3 E8(00000000)                call WriteFile
   236 000002F8 4883C430                add rsp, 48 ; deallocate shadow space
   237                                  
   238 000002FC 833C25[CD010000]12      cmp dword [IncomingMessage_1.message], 0x12 ; WM_QUIT
   239 00000304 0F857E000000            jne near ..@Loop__processMessage
   240                                  ; MS __fastcall x64 ABI
   241 0000030A 4883EC40                sub rsp, 64 ; allocate shadow space
   242 0000030E 48C744243000000000      mov qword [rsp + 48], 0 ; 7th: va_list *Arguments
   243 00000317 48C744242800010000      mov qword [rsp + 40], 256 ; 6th: DWORD nSize
   244 00000320 48C7442420-             mov qword [rsp + 32], FormatMessage__tmpReturnBuffer ; 5th: LPSTR lpBuffer
   244 00000325 [0C000000]         
   245 00000329 41B900000000            mov dword r9d, 0x0 ; 4th: DWORD dwLanguageId
   246 0000032F 41B800000000            mov dword r8d, 0 ; 3rd: DWORD dwMessageId
   247 00000335 BA[E8020000]            mov dword edx, debug_trace_1 ; 2nd: LPCVOID lpSource
   248 0000033A B900240000              mov dword ecx, 0x2400 ; 1st: DWORD dwFlags
   249 0000033F E8(00000000)                call FormatMessageA
   250 00000344 890425[0C010000]        mov dword [FormatMessage__tmpReturnBufferLength], eax ; return DWORD TCHARs written
   251 0000034B 4883C440                add rsp, 64 ; deallocate shadow space
   252                                  
   253                                  ; MS __fastcall x64 ABI
   254 0000034F 4883EC30                sub rsp, 48 ; allocate shadow space
   255 00000353 C744242000000000        mov dword [rsp + 32], 0 ; 5th: LPOVERLAPPED lpOverlapped
   256 0000035B 41B9[10010000]          mov dword r9d, Console__bytesWritten ; 4th: LPDWORD lpNumberOfBytesWritten
   257 00000361 448B0425[0C010000]      mov dword r8d, [FormatMessage__tmpReturnBufferLength] ; 3rd: DWORD nNumberOfBytesToWrite
   258 00000369 BA[0C000000]            mov dword edx, FormatMessage__tmpReturnBuffer ; 2nd: LPCVOID lpBuffer
   259 0000036E 8B0C25[08000000]        mov dword ecx, [Console__stdout_nStdHandle] ; 1st: HANDLE hFile
   260 00000375 E8(00000000)                call WriteFile
   261 0000037A 4883C430                add rsp, 48 ; deallocate shadow space
   262                                  
   263 0000037E B900000000              mov ecx, 0 ; UINT uExitCode
   264 00000383 E9EC020000              jmp near Exit
   265                                  
   266                                  ..@Loop__processMessage:
   267 00000388 E837020000              call near GetLastError__prologue_reset
   268                                  ; MS __fastcall x64 ABI
   269 0000038D 4883EC28                sub rsp, 40 ; allocate shadow space
   270 00000391 48B9-                   mov qword rcx, IncomingMessage_1 ; 1st: LPMSG lpMsg
   270 00000393 [C501000000000000] 
   271 0000039B E8(00000000)                call TranslateMessage
   272 000003A0 4883C428                add rsp, 40 ; deallocate shadow space
   273 000003A4 E82E020000              call near GetLastError__epilogue_check
   274                                  
   275 000003A9 E816020000              call near GetLastError__prologue_reset
   276                                  ; MS __fastcall x64 ABI
   277 000003AE 4883EC28                sub rsp, 40 ; allocate shadow space
   278 000003B2 48B9-                   mov qword rcx, IncomingMessage_1 ; 1st: LPMSG lpMsg
   278 000003B4 [C501000000000000] 
   279 000003BC E8(00000000)                call DispatchMessageA
   280 000003C1 4883C428                add rsp, 40 ; deallocate shadow space
   281 000003C5 E80D020000              call near GetLastError__epilogue_check
   282                                  
   283 000003CA 0F84FEFDFFFF            je near Loop
   284                                  
   285                                  WndProc:
   286 000003D0 48890C25[08030000]      mov qword [nWndProc__hWnd], rcx
   287 000003D8 48891425[10030000]      mov qword [nWndProc__uMsg], rdx
   288 000003E0 4C890425[18030000]      mov qword [nWndProc__wParam], r8
   289 000003E8 4C890C25[20030000]      mov qword [nWndProc__lParam], r9
   290 000003F0 4883FA06                cmp rdx, 0x6
   291 000003F4 0F848D000000            je near WndProc__WM_Activate
   292 000003FA 4881FA12010000          cmp rdx, 0x112
   293 00000401 0F8483000000            je near WndProc__WM_SysCommand
   294 00000407 4883FA10                cmp rdx, 0x10
   295 0000040B 0F8417010000            je near WndProc__WM_Close
   296 00000411 4883FA02                cmp rdx, 0x2
   297 00000415 0F8496000000            je near WndProc__WM_Destroy
   298 0000041B 4881FA00010000          cmp rdx, 0x100
   299 00000422 0F8493010000            je near WndProc__WM_KeyDown
   300 00000428 4881FA01010000          cmp rdx, 0x101
   301 0000042F 0F8489010000            je near WndProc__WM_KeyUp
   302 00000435 4883FA05                cmp rdx, 0x5
   303 00000439 0F8482010000            je near WndProc__WM_Size
   304                                  ..@WndProc__default:
   305 0000043F E880010000              call near GetLastError__prologue_reset
   306                                  ; MS __fastcall x64 ABI
   307 00000444 4883EC28                sub rsp, 40 ; allocate shadow space
   308 00000448 4C8B0C25[20030000]      mov qword r9, [nWndProc__lParam] ; 4th: 
   309 00000450 4C8B0425[18030000]      mov qword r8, [nWndProc__wParam] ; 3rd: 
   310 00000458 488B1425[10030000]      mov qword rdx, [nWndProc__uMsg] ; 2nd: 
   311 00000460 488B0C25[08030000]      mov qword rcx, [nWndProc__hWnd] ; 1st: 
   312 00000468 E8(00000000)                call DefWindowProcA
   313 0000046D 48890425[28030000]      mov qword [nWndProc__return], rax ; return 
   314 00000475 4883C428                add rsp, 40 ; deallocate shadow space
   315 00000479 E859010000              call near GetLastError__epilogue_check
   316                                  
   317 0000047E 488B0425[28030000]      mov qword rax, [nWndProc__return]
   318 00000486 C3                      ret
   319                                  WndProc__WM_Activate:
   320 00000487 31C0                    xor eax, eax
   321 00000489 C3                      ret
   322                                  WndProc__WM_SysCommand:
   323 0000048A 8B1C25[18030000]        mov ebx, [nWndProc__wParam]
   324 00000491 81FB40F10000            cmp ebx, 0xf140
   325 00000497 0F8411000000            je near ..@return_zero
   326 0000049D 81FB70F10000            cmp ebx, 0xf170
   327 000004A3 0F8405000000            je near ..@return_zero
   328 000004A9 E991FFFFFF              jmp near ..@WndProc__default
   329                                  ..@return_zero:
   330 000004AE 31C0                    xor eax, eax
   331 000004B0 C3                      ret
   332                                  WndProc__WM_Destroy:
   333                                  ; MS __fastcall x64 ABI
   334 000004B1 4883EC40                sub rsp, 64 ; allocate shadow space
   335 000004B5 48C744243000000000      mov qword [rsp + 48], 0 ; 7th: va_list *Arguments
   336 000004BE 48C744242800010000      mov qword [rsp + 40], 256 ; 6th: DWORD nSize
   337 000004C7 48C7442420-             mov qword [rsp + 32], FormatMessage__tmpReturnBuffer ; 5th: LPSTR lpBuffer
   337 000004CC [0C000000]         
   338 000004D0 41B900000000            mov dword r9d, 0x0 ; 4th: DWORD dwLanguageId
   339 000004D6 41B800000000            mov dword r8d, 0 ; 3rd: DWORD dwMessageId
   340 000004DC BA[30030000]            mov dword edx, debug_trace_3 ; 2nd: LPCVOID lpSource
   341 000004E1 B900240000              mov dword ecx, 0x2400 ; 1st: DWORD dwFlags
   342 000004E6 E8(00000000)                call FormatMessageA
   343 000004EB 890425[0C010000]        mov dword [FormatMessage__tmpReturnBufferLength], eax ; return DWORD TCHARs written
   344 000004F2 4883C440                add rsp, 64 ; deallocate shadow space
   345                                  
   346                                  ; MS __fastcall x64 ABI
   347 000004F6 4883EC30                sub rsp, 48 ; allocate shadow space
   348 000004FA C744242000000000        mov dword [rsp + 32], 0 ; 5th: LPOVERLAPPED lpOverlapped
   349 00000502 41B9[10010000]          mov dword r9d, Console__bytesWritten ; 4th: LPDWORD lpNumberOfBytesWritten
   350 00000508 448B0425[0C010000]      mov dword r8d, [FormatMessage__tmpReturnBufferLength] ; 3rd: DWORD nNumberOfBytesToWrite
   351 00000510 BA[0C000000]            mov dword edx, FormatMessage__tmpReturnBuffer ; 2nd: LPCVOID lpBuffer
   352 00000515 8B0C25[08000000]        mov dword ecx, [Console__stdout_nStdHandle] ; 1st: HANDLE hFile
   353 0000051C E8(00000000)                call WriteFile
   354 00000521 4883C430                add rsp, 48 ; deallocate shadow space
   355                                  
   356 00000525 31C0                    xor eax, eax
   357 00000527 C3                      ret
   358                                  WndProc__WM_Close:
   359                                  ; MS __fastcall x64 ABI
   360 00000528 4883EC40                sub rsp, 64 ; allocate shadow space
   361 0000052C 48C744243000000000      mov qword [rsp + 48], 0 ; 7th: va_list *Arguments
   362 00000535 48C744242800010000      mov qword [rsp + 40], 256 ; 6th: DWORD nSize
   363 0000053E 48C7442420-             mov qword [rsp + 32], FormatMessage__tmpReturnBuffer ; 5th: LPSTR lpBuffer
   363 00000543 [0C000000]         
   364 00000547 41B900000000            mov dword r9d, 0x0 ; 4th: DWORD dwLanguageId
   365 0000054D 41B800000000            mov dword r8d, 0 ; 3rd: DWORD dwMessageId
   366 00000553 BA[51030000]            mov dword edx, debug_trace_2 ; 2nd: LPCVOID lpSource
   367 00000558 B900240000              mov dword ecx, 0x2400 ; 1st: DWORD dwFlags
   368 0000055D E8(00000000)                call FormatMessageA
   369 00000562 890425[0C010000]        mov dword [FormatMessage__tmpReturnBufferLength], eax ; return DWORD TCHARs written
   370 00000569 4883C440                add rsp, 64 ; deallocate shadow space
   371                                  
   372                                  ; MS __fastcall x64 ABI
   373 0000056D 4883EC30                sub rsp, 48 ; allocate shadow space
   374 00000571 C744242000000000        mov dword [rsp + 32], 0 ; 5th: LPOVERLAPPED lpOverlapped
   375 00000579 41B9[10010000]          mov dword r9d, Console__bytesWritten ; 4th: LPDWORD lpNumberOfBytesWritten
   376 0000057F 448B0425[0C010000]      mov dword r8d, [FormatMessage__tmpReturnBufferLength] ; 3rd: DWORD nNumberOfBytesToWrite
   377 00000587 BA[0C000000]            mov dword edx, FormatMessage__tmpReturnBuffer ; 2nd: LPCVOID lpBuffer
   378 0000058C 8B0C25[08000000]        mov dword ecx, [Console__stdout_nStdHandle] ; 1st: HANDLE hFile
   379 00000593 E8(00000000)                call WriteFile
   380 00000598 4883C430                add rsp, 48 ; deallocate shadow space
   381                                  
   382 0000059C E823000000              call near GetLastError__prologue_reset
   383                                  ; MS __fastcall x64 ABI
   384 000005A1 4883EC28                sub rsp, 40 ; allocate shadow space
   385 000005A5 B900000000              mov dword ecx, 0 ; 1st: int nExitCode
   386 000005AA E8(00000000)                call PostQuitMessage
   387 000005AF 4883C428                add rsp, 40 ; deallocate shadow space
   388 000005B3 E81F000000              call near GetLastError__epilogue_check
   389                                  
   390 000005B8 31C0                    xor eax, eax
   391 000005BA C3                      ret
   392                                  WndProc__WM_KeyDown:
   393 000005BB 31C0                    xor eax, eax
   394 000005BD C3                      ret
   395                                  WndProc__WM_KeyUp:
   396 000005BE 31C0                    xor eax, eax
   397 000005C0 C3                      ret
   398                                  WndProc__WM_Size:
   399 000005C1 31C0                    xor eax, eax
   400 000005C3 C3                      ret
   401                                  
   402                                  GetLastError__prologue_reset:
   403                                  ; MS __fastcall x64 ABI
   404 000005C4 4883EC28                sub rsp, 40 ; allocate shadow space
   405 000005C8 B900000000              mov dword ecx, 0 ; 1st: DWORD dwErrCode
   406 000005CD E8(00000000)                call SetLastError
   407 000005D2 4883C428                add rsp, 40 ; deallocate shadow space
   408 000005D6 C3                      ret
   409                                  
   410                                  GetLastError__epilogue_check:
   411                                  ; MS __fastcall x64 ABI
   412 000005D7 4883EC28                sub rsp, 40 ; allocate shadow space
   413 000005DB E8(00000000)                call GetLastError
   414 000005E0 890425[00000000]        mov dword [GetLastError__errCode], eax ; return 
   415 000005E7 4883C428                add rsp, 40 ; deallocate shadow space
   416 000005EB 4883F800                cmp rax, 0
   417 000005EF 7501                    jne ..@error
   418 000005F1 C3                      ret
   419                                  
   420                                  ..@error:
   421                                  ; MS __fastcall x64 ABI
   422 000005F2 4883EC40                sub rsp, 64 ; allocate shadow space
   423 000005F6 48C744243000000000      mov qword [rsp + 48], 0 ; 7th: va_list *Arguments
   424 000005FF 48C744242800010000      mov qword [rsp + 40], 256 ; 6th: DWORD nSize
   425 00000608 48C7442420-             mov qword [rsp + 32], FormatMessage__tmpReturnBuffer ; 5th: LPSTR lpBuffer
   425 0000060D [0C000000]         
   426 00000611 41B900040000            mov dword r9d, 0x400 ; 4th: DWORD dwLanguageId
   427 00000617 448B0425[00000000]      mov dword r8d, [GetLastError__errCode] ; 3rd: DWORD dwMessageId
   428 0000061F BA00000000              mov dword edx, 0 ; 2nd: LPCVOID lpSource
   429 00000624 B900120000              mov dword ecx, 0x1200 ; 1st: DWORD dwFlags
   430 00000629 E8(00000000)                call FormatMessageA
   431 0000062E 890425[0C010000]        mov dword [FormatMessage__tmpReturnBufferLength], eax ; return DWORD TCHARs written
   432 00000635 4883C440                add rsp, 64 ; deallocate shadow space
   433                                  
   434                                  ; MS __fastcall x64 ABI
   435 00000639 4883EC30                sub rsp, 48 ; allocate shadow space
   436 0000063D C744242000000000        mov dword [rsp + 32], 0 ; 5th: LPOVERLAPPED lpOverlapped
   437 00000645 41B9[10010000]          mov dword r9d, Console__bytesWritten ; 4th: LPDWORD lpNumberOfBytesWritten
   438 0000064B 448B0425[0C010000]      mov dword r8d, [FormatMessage__tmpReturnBufferLength] ; 3rd: DWORD nNumberOfBytesToWrite
   439 00000653 BA[0C000000]            mov dword edx, FormatMessage__tmpReturnBuffer ; 2nd: LPCVOID lpBuffer
   440 00000658 8B0C25[08000000]        mov dword ecx, [Console__stdout_nStdHandle] ; 1st: HANDLE hFile
   441 0000065F E8(00000000)                call WriteFile
   442 00000664 4883C430                add rsp, 48 ; deallocate shadow space
   443                                  
   444 00000668 8B0C25[00000000]        mov ecx, [GetLastError__errCode] ; UINT uExitCode
   445 0000066F E900000000              jmp near Exit
   446                                  
   447                                  Exit:
   448                                  ; MS __fastcall x64 ABI
   449 00000674 4883EC28                sub rsp, 40 ; allocate shadow space
   450 00000678 E8(00000000)                call ExitProcess
   451 0000067D 4883C428                add rsp, 40 ; deallocate shadow space
   452                                  
   453                                  

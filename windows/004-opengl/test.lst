     1                                  ; GOAL: Render OpenGL Context (either blue screen or full-color spinning cube)
     2                                  
     3                                  ; build window
     4                                  extern GetModuleHandleA
     5                                  extern CreateMutexA
     6                                  extern LoadImageA
     7                                  extern RegisterClassExA
     8                                  extern CreateWindowExA
     9                                  
    10                                  ; main loop
    11                                  extern PeekMessageA
    12                                  extern TranslateMessage
    13                                  extern DispatchMessageA
    14                                  extern DefWindowProcA
    15                                  
    16                                  ; shutdown/cleanup
    17                                  extern DestroyWindow
    18                                  extern PostQuitMessage
    19                                  extern ExitProcess
    20                                  
    21                                  ; error handling
    22                                  extern SetLastError
    23                                  extern GetLastError
    24                                  extern FormatMessageA
    25                                  extern GetStdHandle
    26                                  extern WriteFile
    27                                  
    28                                  section .data align=16
    29 00000000 00000000                GetLastError__errCode: dd 0
    30 00000004 00000000                Console__stderr_nStdHandle: dd 0
    31 00000008 00000000                Console__stdout_nStdHandle: dd 0
    32 0000000C 00<rept>                FormatMessage__tmpReturnBuffer: times 256 db 0
    33 0000010C 00000000                FormatMessage__tmpReturnBufferLength: dd 0
    34 00000110 00000000                Console__bytesWritten: dd 0
    35 00000114 30376236323331342D-     Generic__uuid: db "07b62314-d4fc-4704-96e8-c31eb378d815",0
    35 0000011D 643466632D34373034-
    35 00000126 2D393665382D633331-
    35 0000012F 656233373864383135-
    35 00000138 00                 
    36 00000139 0000000000000000        CreateMutexA__handle: dq 0
    37 00000141 0000000000000000        GetModuleHandleA__hModule: dq 0
    38 00000149 0000000000000000        CreateWindow__icon: dq 0
    39 00000151 0000000000000000        CreateWindow__cursor: dq 0
    40                                  
    41                                  ; struct
    42                                  MainWindow_1: ; instanceof tagWNDCLASSEXA
    43 00000159 50000000                MainWindow_1.cbSize dd 80 ; UINT
    44 0000015D 23000000                MainWindow_1.style dd 0x23 ; UINT = CS_OWNDC | CS_VREDRAW | CS_HREDRAW
    45 00000161 [7F02000000000000]      MainWindow_1.lpfnWndProc dq WndProc ; WNDPROC
    46 00000169 00000000                MainWindow_1.cbClsExtra dd 0 ; int
    47 0000016D 00000000                MainWindow_1.cbWndExtra dd 0 ; int
    48 00000171 [4101000000000000]      MainWindow_1.hInstance dq GetModuleHandleA__hModule ; HINSTANCE
    49 00000179 [4901000000000000]      MainWindow_1.hIcon dq CreateWindow__icon ; HICON
    50 00000181 [5101000000000000]      MainWindow_1.hCursor dq CreateWindow__cursor ; HCURSOR
    51 00000189 0500000000000000        MainWindow_1.hbrBackground dq 5 ; HBRUSH
    52 00000191 0000000000000000        MainWindow_1.lpszMenuName dq 0 ; LPCSTR
    53 00000199 [1401000000000000]      MainWindow_1.lpszClassName dq Generic__uuid ; LPCSTR
    54 000001A1 0000000000000000        MainWindow_1.hIconSm dq 0 ; HICON
    55                                  
    56 000001A9 0000000000000000        CreateWindow__atom_name: dq 0
    57 000001B1 0000000000000000        CreateWindow__hWnd: dq 0
    58 000001B9 4F70656E474C204465-     CreateWindow__title: db "OpenGL Demo",0
    58 000001C2 6D6F00             
    59                                  
    60                                  ; struct
    61                                  IncomingMessage_1: ; instanceof tagMSG
    62 000001C5 0000000000000000        IncomingMessage_1.hwnd dq 0 ; HWND
    63 000001CD 00000000                IncomingMessage_1.message dd 0 ; UINT
    64 000001D1 0000000000000000        IncomingMessage_1.wParam dq 0 ; WPARAM
    65 000001D9 0000000000000000        IncomingMessage_1.lParam dq 0 ; LPARAM
    66 000001E1 00000000                IncomingMessage_1.time dd 0 ; dword
    67 000001E5 00000000                IncomingMessage_1.pt.x dd 0 ; dword
    68 000001E9 00000000                IncomingMessage_1.pt.y dd 0 ; dword
    69 000001ED 00000000                IncomingMessage_1.lPrivate dd 0 ; dword
    70                                  
    71 000001F1 00000000                PeekMessage_hasMsgs: dd 0
    72 000001F5 0000000000000000        nWndProc__hWnd: dq 0
    73 000001FD 0000000000000000        nWndProc__uMsg: dq 0
    74 00000205 0000000000000000        nWndProc__wParam: dq 0
    75 0000020D 0000000000000000        nWndProc__lParam: dq 0
    76 00000215 0000000000000000        nWndProc__return: dq 0
    77                                  
    78                                  section .text align=16
    79                                  global main
    80                                  main:
    81                                  
    82                                  ; get pointers to stdout/stderr pipes
    83 00000000 E8A5030000              call near GetLastError__prologue_reset
    84                                  ; MS __fastcall x64 ABI
    85 00000005 4883EC28                sub rsp, 40 ; allocate shadow space
    86 00000009 B9F4FFFFFF              mov dword ecx, -12 ; 1st: DWORD nStdHandle = STD_ERROR_HANDLE
    87 0000000E E8(00000000)                call GetStdHandle
    88 00000013 890425[04000000]        mov dword [Console__stderr_nStdHandle], eax ; return 
    89 0000001A 4883C428                add rsp, 40 ; deallocate shadow space
    90 0000001E E89A030000              call near GetLastError__epilogue_check
    91                                  
    92 00000023 E882030000              call near GetLastError__prologue_reset
    93                                  ; MS __fastcall x64 ABI
    94 00000028 4883EC28                sub rsp, 40 ; allocate shadow space
    95 0000002C B9F5FFFFFF              mov dword ecx, -11 ; 1st: DWORD nStdHandle = STD_OUTPUT_HANDLE
    96 00000031 E8(00000000)                call GetStdHandle
    97 00000036 890425[08000000]        mov dword [Console__stdout_nStdHandle], eax ; return 
    98 0000003D 4883C428                add rsp, 40 ; deallocate shadow space
    99 00000041 E877030000              call near GetLastError__epilogue_check
   100                                  
   101                                  
   102 00000046 E85F030000              call near GetLastError__prologue_reset
   103                                  ; MS __fastcall x64 ABI
   104 0000004B 4883EC28                sub rsp, 40 ; allocate shadow space
   105 0000004F 41B8[14010000]          mov dword r8d, Generic__uuid ; 3rd: LPCSTR lpName
   106 00000055 BA01000000              mov dword edx, 1 ; 2nd: BOOL bInitialOwner
   107 0000005A B900000000              mov dword ecx, 0 ; 1st: LPSECURITY_ATTRIBUTES lpMutexAttributes
   108 0000005F E8(00000000)                call CreateMutexA
   109 00000064 48890425[39010000]      mov qword [CreateMutexA__handle], rax ; return HANDLE
   110 0000006C 4883C428                add rsp, 40 ; deallocate shadow space
   111 00000070 E848030000              call near GetLastError__epilogue_check
   112                                  
   113 00000075 E830030000              call near GetLastError__prologue_reset
   114                                  ; MS __fastcall x64 ABI
   115 0000007A 4883EC28                sub rsp, 40 ; allocate shadow space
   116 0000007E B900000000              mov dword ecx, 0 ; 1st: LPCSTR lpModuleName
   117 00000083 E8(00000000)                call GetModuleHandleA
   118 00000088 48890425[41010000]      mov qword [GetModuleHandleA__hModule], rax ; return HMODULE *phModule
   119 00000090 4883C428                add rsp, 40 ; deallocate shadow space
   120 00000094 E824030000              call near GetLastError__epilogue_check
   121                                  
   122 00000099 E80C030000              call near GetLastError__prologue_reset
   123                                  ; MS __fastcall x64 ABI
   124 0000009E 4883EC38                sub rsp, 56 ; allocate shadow space
   125 000000A2 C744242840800000        mov dword [rsp + 40], 0x8040 ; 6th: UINT fuLoad = LR_SHARED | LR_DEFAULTSIZE
   126 000000AA C744242000000000        mov dword [rsp + 32], 0 ; 5th: int cy
   127 000000B2 41B900000000            mov dword r9d, 0 ; 4th: int cx
   128 000000B8 41B801000000            mov dword r8d, 1 ; 3rd: UINT type = IMAGE_ICON
   129 000000BE BA057F0000              mov dword edx, 32517 ; 2nd: LPCSTR name = OIC_WINLOGO
   130 000000C3 B900000000              mov dword ecx, 0 ; 1st: HINSTANCE hInst
   131 000000C8 E8(00000000)                call LoadImageA
   132 000000CD 48890425[49010000]      mov qword [CreateWindow__icon], rax ; return HANDLE
   133 000000D5 4883C438                add rsp, 56 ; deallocate shadow space
   134 000000D9 E8DF020000              call near GetLastError__epilogue_check
   135                                  
   136 000000DE E8C7020000              call near GetLastError__prologue_reset
   137                                  ; MS __fastcall x64 ABI
   138 000000E3 4883EC38                sub rsp, 56 ; allocate shadow space
   139 000000E7 C744242840800000        mov dword [rsp + 40], 0x8040 ; 6th: UINT fuLoad = LR_SHARED | LR_DEFAULTSIZE
   140 000000EF C744242000000000        mov dword [rsp + 32], 0 ; 5th: int cy
   141 000000F7 41B900000000            mov dword r9d, 0 ; 4th: int cx
   142 000000FD 41B802000000            mov dword r8d, 2 ; 3rd: UINT type = IMAGE_CURSOR
   143 00000103 BA007F0000              mov dword edx, 32512 ; 2nd: LPCSTR name = IDC_ARROW
   144 00000108 B900000000              mov dword ecx, 0 ; 1st: HINSTANCE hInst
   145 0000010D E8(00000000)                call LoadImageA
   146 00000112 48890425[51010000]      mov qword [CreateWindow__cursor], rax ; return HANDLE
   147 0000011A 4883C438                add rsp, 56 ; deallocate shadow space
   148 0000011E E89A020000              call near GetLastError__epilogue_check
   149                                  
   150 00000123 E882020000              call near GetLastError__prologue_reset
   151                                  ; MS __fastcall x64 ABI
   152 00000128 4883EC28                sub rsp, 40 ; allocate shadow space
   153 0000012C 48B9-                   mov qword rcx, MainWindow_1 ; 1st: WNDCLASSEXA *Arg1
   153 0000012E [5901000000000000] 
   154 00000136 E8(00000000)                call RegisterClassExA
   155 0000013B 48890425[A9010000]      mov qword [CreateWindow__atom_name], rax ; return 
   156 00000143 4883C428                add rsp, 40 ; deallocate shadow space
   157 00000147 E871020000              call near GetLastError__epilogue_check
   158                                  
   159 0000014C E859020000              call near GetLastError__prologue_reset
   160                                  ; MS __fastcall x64 ABI
   161 00000151 4883EC68                sub rsp, 104 ; allocate shadow space
   162 00000155 48C744245800000000      mov qword [rsp + 88], 0 ; 12th: LPVOID lpParam
   163 0000015E 48C7442450-             mov qword [rsp + 80], GetModuleHandleA__hModule ; 11th: HINSTANCE hInstance
   163 00000163 [41010000]         
   164 00000167 48C744244800000000      mov qword [rsp + 72], 0 ; 10th: HMENU hMenu
   165 00000170 48C744244000000000      mov qword [rsp + 64], 0 ; 9th: HWND hWndParent
   166 00000179 C7442438E0010000        mov dword [rsp + 56], 480 ; 8th: int nHeight
   167 00000181 C744243080020000        mov dword [rsp + 48], 640 ; 7th: int nWidth
   168 00000189 C744242800000080        mov dword [rsp + 40], 0x80000000 ; 6th: int Y
   169 00000191 C744242000000080        mov dword [rsp + 32], 0x80000000 ; 5th: int X
   170 00000199 41B90000CF16            mov qword r9, 0x16cf0000 ; 4th: DWORD dwStyle = WS_OVERLAPPEDWINDOW | WS_VISIBLE | WS_CLIPCHILDREN | WS_CLIPSIBLINGS
   171 0000019F 49B8-                   mov qword r8, CreateWindow__title ; 3rd: LPCSTR lpWindowName
   171 000001A1 [B901000000000000] 
   172 000001A9 48BA-                   mov qword rdx, Generic__uuid ; 2nd: LPCSTR lpClassName
   172 000001AB [1401000000000000] 
   173 000001B3 B900030000              mov qword rcx, 768 ; 1st: DWORD dwExStyle = WS_EX_OVERLAPPEDWINDOW
   174 000001B8 E8(00000000)                call CreateWindowExA
   175 000001BD 48890425[B1010000]      mov qword [CreateWindow__hWnd], rax ; return HWND
   176 000001C5 4883C468                add rsp, 104 ; deallocate shadow space
   177 000001C9 E8EF010000              call near GetLastError__epilogue_check
   178                                  
   179                                  Loop:
   180 000001CE E8D7010000              call near GetLastError__prologue_reset
   181                                  ; MS __fastcall x64 ABI
   182 000001D3 4883EC30                sub rsp, 48 ; allocate shadow space
   183 000001D7 C744242001000000        mov dword [rsp + 32], 1 ; 5th: UINT wRemoveMsg = PM_REMOVE
   184 000001DF 41B900000000            mov dword r9d, 0 ; 4th: UINT wMsgFilterMax
   185 000001E5 41B800000000            mov dword r8d, 0 ; 3rd: UINT wMsgFilterMin
   186 000001EB 488B1425[B1010000]      mov qword rdx, [CreateWindow__hWnd] ; 2nd: HWND hWnd
   187 000001F3 48B9-                   mov qword rcx, IncomingMessage_1 ; 1st: LPMSG lpMsg
   187 000001F5 [C501000000000000] 
   188 000001FD E8(00000000)                call PeekMessageA
   189 00000202 890425[F1010000]        mov dword [PeekMessage_hasMsgs], eax ; return BOOL
   190 00000209 4883C430                add rsp, 48 ; deallocate shadow space
   191 0000020D E8AB010000              call near GetLastError__epilogue_check
   192                                  
   193 00000212 833C25[F1010000]00      cmp dword [PeekMessage_hasMsgs], 0 ; zero messages
   194 0000021A 0F84AEFFFFFF            je near Loop
   195 00000220 833C25[CD010000]12      cmp dword [IncomingMessage_1.message], 0x12 ; WM_QUIT
   196 00000228 0F850A000000            jne near ..@Loop__processMessage
   197 0000022E B900000000              mov ecx, 0 ; UINT uExitCode
   198 00000233 E922020000              jmp near Exit
   199                                  
   200                                  ..@Loop__processMessage:
   201 00000238 E86D010000              call near GetLastError__prologue_reset
   202                                  ; MS __fastcall x64 ABI
   203 0000023D 4883EC28                sub rsp, 40 ; allocate shadow space
   204 00000241 48B9-                   mov qword rcx, IncomingMessage_1 ; 1st: LPMSG lpMsg
   204 00000243 [C501000000000000] 
   205 0000024B E8(00000000)                call TranslateMessage
   206 00000250 4883C428                add rsp, 40 ; deallocate shadow space
   207 00000254 E864010000              call near GetLastError__epilogue_check
   208                                  
   209 00000259 E84C010000              call near GetLastError__prologue_reset
   210                                  ; MS __fastcall x64 ABI
   211 0000025E 4883EC28                sub rsp, 40 ; allocate shadow space
   212 00000262 48B9-                   mov qword rcx, IncomingMessage_1 ; 1st: LPMSG lpMsg
   212 00000264 [C501000000000000] 
   213 0000026C E8(00000000)                call DispatchMessageA
   214 00000271 4883C428                add rsp, 40 ; deallocate shadow space
   215 00000275 E843010000              call near GetLastError__epilogue_check
   216                                  
   217 0000027A E94FFFFFFF              jmp near Loop
   218                                  
   219                                  WndProc:
   220 0000027F 48890C25[F5010000]      mov qword [nWndProc__hWnd], rcx
   221 00000287 48891425[FD010000]      mov qword [nWndProc__uMsg], rdx
   222 0000028F 4C890425[05020000]      mov qword [nWndProc__wParam], r8
   223 00000297 4C890C25[0D020000]      mov qword [nWndProc__lParam], r9
   224 0000029F 4883FA06                cmp rdx, 0x6
   225 000002A3 0F848D000000            je near WndProc__WM_Activate
   226 000002A9 4881FA12010000          cmp rdx, 0x112
   227 000002B0 0F8483000000            je near WndProc__WM_SysCommand
   228 000002B6 4883FA10                cmp rdx, 0x10
   229 000002BA 0F84A0000000            je near WndProc__WM_Close
   230 000002C0 4883FA02                cmp rdx, 0x2
   231 000002C4 0F84B8000000            je near WndProc__WM_Destroy
   232 000002CA 4881FA00010000          cmp rdx, 0x100
   233 000002D1 0F84CA000000            je near WndProc__WM_KeyDown
   234 000002D7 4881FA01010000          cmp rdx, 0x101
   235 000002DE 0F84C0000000            je near WndProc__WM_KeyUp
   236 000002E4 4883FA05                cmp rdx, 0x5
   237 000002E8 0F84B9000000            je near WndProc__WM_Size
   238                                  ..@WndProc__default:
   239 000002EE E8B7000000              call near GetLastError__prologue_reset
   240                                  ; MS __fastcall x64 ABI
   241 000002F3 4883EC28                sub rsp, 40 ; allocate shadow space
   242 000002F7 4C8B0C25[0D020000]      mov qword r9, [nWndProc__lParam] ; 4th: 
   243 000002FF 4C8B0425[05020000]      mov qword r8, [nWndProc__wParam] ; 3rd: 
   244 00000307 488B1425[FD010000]      mov qword rdx, [nWndProc__uMsg] ; 2nd: 
   245 0000030F 488B0C25[F5010000]      mov qword rcx, [nWndProc__hWnd] ; 1st: 
   246 00000317 E8(00000000)                call DefWindowProcA
   247 0000031C 48890425[15020000]      mov qword [nWndProc__return], rax ; return 
   248 00000324 4883C428                add rsp, 40 ; deallocate shadow space
   249 00000328 E890000000              call near GetLastError__epilogue_check
   250                                  
   251 0000032D 488B0425[15020000]      mov qword rax, [nWndProc__return]
   252 00000335 C3                      ret
   253                                  WndProc__WM_Activate:
   254 00000336 31C0                    xor eax, eax
   255 00000338 C3                      ret
   256                                  WndProc__WM_SysCommand:
   257 00000339 8B1C25[05020000]        mov ebx, [nWndProc__wParam]
   258 00000340 81FB40F10000            cmp ebx, 0xf140
   259 00000346 0F8411000000            je near ..@return_zero
   260 0000034C 81FB70F10000            cmp ebx, 0xf170
   261 00000352 0F8405000000            je near ..@return_zero
   262 00000358 E991FFFFFF              jmp near ..@WndProc__default
   263                                  ..@return_zero:
   264 0000035D 31C0                    xor eax, eax
   265 0000035F C3                      ret
   266                                  WndProc__WM_Close:
   267 00000360 E845000000              call near GetLastError__prologue_reset
   268                                  ; MS __fastcall x64 ABI
   269 00000365 4883EC28                sub rsp, 40 ; allocate shadow space
   270 00000369 488B0C25[B1010000]      mov qword rcx, [CreateWindow__hWnd] ; 1st: HWND hWnd
   271 00000371 E8(00000000)                call DestroyWindow
   272 00000376 4883C428                add rsp, 40 ; deallocate shadow space
   273 0000037A E83E000000              call near GetLastError__epilogue_check
   274                                  
   275 0000037F 31C0                    xor eax, eax
   276 00000381 C3                      ret
   277                                  WndProc__WM_Destroy:
   278 00000382 E823000000              call near GetLastError__prologue_reset
   279                                  ; MS __fastcall x64 ABI
   280 00000387 4883EC28                sub rsp, 40 ; allocate shadow space
   281 0000038B B900000000              mov dword ecx, 0 ; 1st: int nExitCode
   282 00000390 E8(00000000)                call PostQuitMessage
   283 00000395 4883C428                add rsp, 40 ; deallocate shadow space
   284 00000399 E81F000000              call near GetLastError__epilogue_check
   285                                  
   286 0000039E 31C0                    xor eax, eax
   287 000003A0 C3                      ret
   288                                  WndProc__WM_KeyDown:
   289 000003A1 31C0                    xor eax, eax
   290 000003A3 C3                      ret
   291                                  WndProc__WM_KeyUp:
   292 000003A4 31C0                    xor eax, eax
   293 000003A6 C3                      ret
   294                                  WndProc__WM_Size:
   295 000003A7 31C0                    xor eax, eax
   296 000003A9 C3                      ret
   297                                  
   298                                  GetLastError__prologue_reset:
   299                                  ; MS __fastcall x64 ABI
   300 000003AA 4883EC28                sub rsp, 40 ; allocate shadow space
   301 000003AE B900000000              mov dword ecx, 0 ; 1st: DWORD dwErrCode
   302 000003B3 E8(00000000)                call SetLastError
   303 000003B8 4883C428                add rsp, 40 ; deallocate shadow space
   304 000003BC C3                      ret
   305                                  
   306                                  GetLastError__epilogue_check:
   307                                  ; MS __fastcall x64 ABI
   308 000003BD 4883EC28                sub rsp, 40 ; allocate shadow space
   309 000003C1 E8(00000000)                call GetLastError
   310 000003C6 890425[00000000]        mov dword [GetLastError__errCode], eax ; return 
   311 000003CD 4883C428                add rsp, 40 ; deallocate shadow space
   312 000003D1 4883F800                cmp rax, 0
   313 000003D5 7501                    jne ..@error
   314 000003D7 C3                      ret
   315                                  
   316                                  ..@error:
   317                                  ; MS __fastcall x64 ABI
   318 000003D8 4883EC40                sub rsp, 64 ; allocate shadow space
   319 000003DC 48C744243000000000      mov qword [rsp + 48], 0 ; 7th: va_list *Arguments
   320 000003E5 48C744242800010000      mov qword [rsp + 40], 256 ; 6th: DWORD nSize
   321 000003EE 48C7442420-             mov qword [rsp + 32], FormatMessage__tmpReturnBuffer ; 5th: LPSTR lpBuffer
   321 000003F3 [0C000000]         
   322 000003F7 41B900040000            mov dword r9d, 0x400 ; 4th: DWORD dwLanguageId
   323 000003FD 448B0425[00000000]      mov dword r8d, [GetLastError__errCode] ; 3rd: DWORD dwMessageId
   324 00000405 BA00000000              mov dword edx, 0 ; 2nd: LPCVOID lpSource
   325 0000040A B900120000              mov dword ecx, 0x1200 ; 1st: DWORD dwFlags
   326 0000040F E8(00000000)                call FormatMessageA
   327 00000414 890425[0C010000]        mov dword [FormatMessage__tmpReturnBufferLength], eax ; return DWORD TCHARs written
   328 0000041B 4883C440                add rsp, 64 ; deallocate shadow space
   329                                  
   330                                  ; MS __fastcall x64 ABI
   331 0000041F 4883EC30                sub rsp, 48 ; allocate shadow space
   332 00000423 C744242000000000        mov dword [rsp + 32], 0 ; 5th: LPOVERLAPPED lpOverlapped
   333 0000042B 41B9[10010000]          mov dword r9d, Console__bytesWritten ; 4th: LPDWORD lpNumberOfBytesWritten
   334 00000431 448B0425[0C010000]      mov dword r8d, [FormatMessage__tmpReturnBufferLength] ; 3rd: DWORD nNumberOfBytesToWrite
   335 00000439 BA[0C000000]            mov dword edx, FormatMessage__tmpReturnBuffer ; 2nd: LPCVOID lpBuffer
   336 0000043E 8B0C25[08000000]        mov dword ecx, [Console__stdout_nStdHandle] ; 1st: HANDLE hFile
   337 00000445 E8(00000000)                call WriteFile
   338 0000044A 4883C430                add rsp, 48 ; deallocate shadow space
   339                                  
   340 0000044E 8B0C25[00000000]        mov ecx, [GetLastError__errCode] ; UINT uExitCode
   341 00000455 E900000000              jmp near Exit
   342                                  
   343                                  Exit:
   344                                  ; MS __fastcall x64 ABI
   345 0000045A 4883EC28                sub rsp, 40 ; allocate shadow space
   346 0000045E E8(00000000)                call ExitProcess
   347 00000463 4883C428                add rsp, 40 ; deallocate shadow space
   348                                  
   349                                  

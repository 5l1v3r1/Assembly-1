     1                                  ; GOAL: Render OpenGL spinning 3d cube animation
     2                                  ; 
     3                                  extern SetLastError
     4                                  extern GetLastError
     5                                  extern FormatMessageA
     6                                  extern WriteFile
     7                                  extern ExitProcess
     8                                  extern GetStdHandle
     9                                  extern CreateMutexA
    10                                  extern GetModuleHandleA
    11                                  extern LoadImageA
    12                                  extern RegisterClassExA
    13                                  extern CreateWindowExA
    14                                  extern GetDC
    15                                  extern ChoosePixelFormat
    16                                  extern SetPixelFormat
    17                                  extern LoadLibraryA
    18                                  extern GetProcAddress
    19                                  extern PeekMessageA
    20                                  extern TranslateMessage
    21                                  extern DispatchMessageA
    22                                  extern SwapBuffers
    23                                  extern DefWindowProcA
    24                                  extern DestroyWindow
    25                                  extern PostQuitMessage
    26                                  
    27                                  section .data align=16
    28 00000000 00<rept>                FormatMessage__buffer: times 256 db 0
    29 00000100 00000000                GetLastError__errCode: dd 0
    30 00000104 00000000                FormatMessage__length: dd 0
    31 00000108 00000000                printf__success: dd 0
    32 0000010C 00000000                ExitProcess__code: dd 0
    33 00000110 00000000                glGetError__code: dd 0
    34 00000114 676C4572726F722025-     FormatString: db "glError %1!.8llX!",10,10,0
    34 0000011D 31212E386C6C58210A-
    34 00000126 0A00               
    35 00000128 677261636566756C20-     FormatString_1: db "graceful shutdown complete.",10,0
    35 00000131 73687574646F776E20-
    35 0000013A 636F6D706C6574652E-
    35 00000143 0A00               
    36 00000145 736F6D657468696E67-     FormatString_2: db "something awful happened",10,0
    36 0000014E 20617766756C206861-
    36 00000157 7070656E65640A00   
    37 0000015F 00000000                WriteFile__bytesWritten: dd 0
    38 00000163 00000000                Console__stderr_nStdHandle: dd 0
    39 00000167 00000000                Console__stdout_nStdHandle: dd 0
    40 0000016B 0000000000000000        Generic__success: dq 0
    41 00000173 0000000000000000-       __message_trace: times 8 dq 0
    41 00000173 <rept>             
    42 000001B3 00000000                Generic__shutdown: dd 0
    43 000001B7 30376236323331342D-     Generic__uuid: db "07b62314-d4fc-4704-96e8-c31eb378d815",0
    43 000001C0 643466632D34373034-
    43 000001C9 2D393665382D633331-
    43 000001D2 656233373864383135-
    43 000001DB 00                 
    44 000001DC 0000000000000000        CreateMutexA__handle: dq 0
    45 000001E4 0000000000000000        GetModuleHandleA__hModule: dq 0
    46 000001EC 0000000000000000        CreateWindow__icon: dq 0
    47 000001F4 0000000000000000        CreateWindow__cursor: dq 0
    48                                  
    49                                  ; struct
    50                                  MainWindow: ; instanceof tagWNDCLASSEXA
    51 000001FC 50000000                MainWindow.cbSize: dd 0x50 ; UINT = 80
    52 00000200 23000000                MainWindow.style: dd 0x23 ; = 35 = CS_OWNDC | CS_VREDRAW | CS_HREDRAW UINT
    53 00000204 [F205000000000000]      MainWindow.lpfnWndProc: dq WndProc ; WNDPROC
    54 0000020C 00000000                MainWindow.cbClsExtra: dd 0 ; int = NULL
    55 00000210 00000000                MainWindow.cbWndExtra: dd 0 ; int = NULL
    56 00000214 [E401000000000000]      MainWindow.hInstance: dq GetModuleHandleA__hModule ; HINSTANCE
    57 0000021C [EC01000000000000]      MainWindow.hIcon: dq CreateWindow__icon ; HICON
    58 00000224 [F401000000000000]      MainWindow.hCursor: dq CreateWindow__cursor ; HCURSOR
    59 0000022C 0000000000000000        MainWindow.hbrBackground: dq 0 ; HBRUSH = NULL
    60 00000234 0000000000000000        MainWindow.lpszMenuName: dq 0 ; LPCSTR = NULL
    61 0000023C [B701000000000000]      MainWindow.lpszClassName: dq Generic__uuid ; LPCSTR
    62 00000244 0000000000000000        MainWindow.hIconSm: dq 0 ; HICON = NULL
    63                                  
    64 0000024C 0000000000000000        CreateWindow__atom_name: dq 0
    65 00000254 4F70656E474C204465-     CreateWindow__title: db "OpenGL Demo",0
    65 0000025D 6D6F00             
    66 00000260 0000000000000000        CreateWindow__hWnd: dq 0
    67 00000268 0000000000000000        GetDC__hDC: dq 0
    68                                  
    69                                  ; struct
    70                                  PixelFormat: ; instanceof PIXELFORMATDESCRIPTOR
    71 00000270 2800                    PixelFormat.nSize: dw 0x28 ; sizeof(struct) = 40
    72 00000272 0100                    PixelFormat.nVersion: dw 0x1 ; = 1 (magic constant)
    73 00000274 25000000                PixelFormat.dwFlags: dd 0x25 ; = 37 = PFD_DRAW_TO_WINDOW | PFD_SUPPORT_OPENGL | PFD_DOUBLEBUFFER
    74 00000278 00                      PixelFormat.iPixelType: db 0 ; = PFD_TYPE_RGBA
    75 00000279 18                      PixelFormat.cColorBits: db 0x18 ; = 24 (24-bit color depth)
    76 0000027A 00                      PixelFormat.cRedBits: db 0 ; (not used)
    77 0000027B 00                      PixelFormat.cRedShift: db 0 ; (not used)
    78 0000027C 00                      PixelFormat.cGreenBits: db 0 ; (not used)
    79 0000027D 00                      PixelFormat.cGreenShift: db 0 ; (not used)
    80 0000027E 00                      PixelFormat.cBlueBits: db 0 ; (not used)
    81 0000027F 00                      PixelFormat.cBlueShift: db 0 ; (not used)
    82 00000280 00                      PixelFormat.cAlphaBits: db 0 ; (no alpha buffer)
    83 00000281 00                      PixelFormat.cAlphaShift: db 0 ; (not used)
    84 00000282 00                      PixelFormat.cAccumBits: db 0 ; (no accumulation buffer)
    85 00000283 00                      PixelFormat.cAccumRedBits: db 0 ; (not used)
    86 00000284 00                      PixelFormat.cAccumGreenBits: db 0 ; (not used)
    87 00000285 00                      PixelFormat.cAccumBlueBits: db 0 ; (not used)
    88 00000286 00                      PixelFormat.cAccumAlphaBits: db 0 ; (not used)
    89 00000287 20                      PixelFormat.cDepthBits: db 0x20 ; = 32 (32-bit z-buffer)
    90 00000288 00                      PixelFormat.cStencilBits: db 0 ; (no stencil buffer)
    91 00000289 00                      PixelFormat.cAuxBuffers: db 0 ; (no auxiliary buffer)
    92 0000028A 00                      PixelFormat.iLayerType: db 0 ; = PFD_MAIN_PLANE
    93 0000028B 00                      PixelFormat.bReserved: db 0 ; (not used)
    94 0000028C 00000000                PixelFormat.dwLayerMask: dd 0 ; (not used)
    95 00000290 00000000                PixelFormat.dwVisibleMask: dd 0 ; (not used)
    96 00000294 00000000                PixelFormat.dwDamageMask: dd 0 ; (not used)
    97                                  
    98 00000298 00000000                ChoosePixelFormat__format: dd 0
    99 0000029C 6F70656E676C33322E-     LoadLibraryA__opengl32: db "opengl32.dll",0
    99 000002A5 646C6C00           
   100 000002A9 0000000000000000        LoadLibraryA__opengl32_hModule: dq 0
   101 000002B1 77676C437265617465-     GetProcAddress__wglCreateContext: db "wglCreateContext",0
   101 000002BA 436F6E7465787400   
   102 000002C2 0000000000000000        wglCreateContext: dq 0
   103 000002CA 77676C4D616B654375-     GetProcAddress__wglMakeCurrent: db "wglMakeCurrent",0
   103 000002D3 7272656E7400       
   104 000002D9 0000000000000000        wglMakeCurrent: dq 0
   105 000002E1 676C436C656172436F-     GetProcAddress__glClearColor: db "glClearColor",0
   105 000002EA 6C6F7200           
   106 000002EE 0000000000000000        glClearColor: dq 0
   107 000002F6 676C436C65617200        GetProcAddress__glClear: db "glClear",0
   108 000002FE 0000000000000000        glClear: dq 0
   109 00000306 676C4765744572726F-     GetProcAddress__glGetError: db "glGetError",0
   109 0000030F 7200               
   110 00000311 0000000000000000        glGetError: dq 0
   111 00000319 676C47657453747269-     GetProcAddress__glGetString: db "glGetString",0
   111 00000322 6E6700             
   112 00000325 0000000000000000        glGetString: dq 0
   113 0000032D 77676C47657450726F-     GetProcAddress__wglGetProcAddress: db "wglGetProcAddress",0
   113 00000336 634164647265737300 
   114 0000033F 0000000000000000        wglGetProcAddress: dq 0
   115 00000347 0000000000000000        wglCreateContext__ctx: dq 0
   116 0000034F 0000000000000000        glString: dq 0
   117 00000357 474C5F56455253494F-     FormatString_3: db "GL_VERSION: %1",10,10,0
   117 00000360 4E3A2025310A0A00   
   118 00000368 0000000000000000        F0_0: dq 0x0
   119 00000370 0000803F00000000        F1_0: dq 0x3f800000
   120                                  
   121                                  ; struct
   122                                  IncomingMessage: ; instanceof tagMSG
   123 00000378 0000000000000000        IncomingMessage.hwnd: dq 0 ; HWND
   124 00000380 00000000                IncomingMessage.message: dd 0 ; UINT
   125 00000384 0000000000000000        IncomingMessage.wParam: dq 0 ; WPARAM
   126 0000038C 0000000000000000        IncomingMessage.lParam: dq 0 ; LPARAM
   127 00000394 00000000                IncomingMessage.time: dd 0
   128 00000398 00000000                IncomingMessage.pt.x: dd 0
   129 0000039C 00000000                IncomingMessage.pt.y: dd 0
   130 000003A0 00000000                IncomingMessage.lPrivate: dd 0
   131                                  
   132 000003A4 0000000000000000        WndProc__hWnd: dq 0
   133 000003AC 0000000000000000        WndProc__uMsg: dq 0
   134 000003B4 0000000000000000        WndProc__wParam: dq 0
   135 000003BC 0000000000000000        WndProc__lParam: dq 0
   136                                  
   137                                  section .text align=16
   138                                  global main
   139                                  main:
   140                                  ; get pointers to stdout/stderr pipes
   141 00000000 E83F070000                  call GetLastError__prologue_reset
   142                                      ; MS __fastcall x64 ABI
   143 00000005 4883EC28                    sub rsp, 40 ; allocate shadow space
   144 00000009 B9F4FFFFFF                  mov dword ecx, 0xfffffff4 ; 1st = -12 DWORD nStdHandle
   145 0000000E E8(00000000)            call GetStdHandle
   146 00000013 890425[63010000]            mov dword [Console__stderr_nStdHandle], eax ; return HANDLE
   147 0000001A 4883C428                    add rsp, 40 ; deallocate shadow space
   148                                  
   149 0000001E E834070000                  call GetLastError__epilogue_check
   150                                  
   151 00000023 E81C070000                  call GetLastError__prologue_reset
   152                                      ; MS __fastcall x64 ABI
   153 00000028 4883EC28                    sub rsp, 40 ; allocate shadow space
   154 0000002C B9F5FFFFFF                  mov dword ecx, 0xfffffff5 ; 1st = -11 DWORD nStdHandle
   155 00000031 E8(00000000)            call GetStdHandle
   156 00000036 890425[67010000]            mov dword [Console__stdout_nStdHandle], eax ; return HANDLE
   157 0000003D 4883C428                    add rsp, 40 ; deallocate shadow space
   158                                  
   159 00000041 E811070000                  call GetLastError__epilogue_check
   160                                  
   161                                  
   162                                  ; verify the window is not open twice
   163 00000046 E8F9060000                  call GetLastError__prologue_reset
   164                                      ; MS __fastcall x64 ABI
   165 0000004B 4883EC28                    sub rsp, 40 ; allocate shadow space
   166 0000004F 41B8[B7010000]              mov dword r8d, Generic__uuid ; 3rd LPCSTR lpName
   167 00000055 BA01000000                  mov dword edx, 1 ; 2nd = TRUE BOOL bInitialOwner
   168 0000005A B900000000                  mov dword ecx, 0 ; 1st LPSECURITY_ATTRIBUTES lpMutexAttributes
   169 0000005F E8(00000000)            call CreateMutexA
   170 00000064 48890425[DC010000]          mov qword [CreateMutexA__handle], rax ; return HANDLE
   171 0000006C 4883C428                    add rsp, 40 ; deallocate shadow space
   172                                  
   173 00000070 E8E2060000                  call GetLastError__epilogue_check
   174                                  
   175                                  ; get a pointer to this process for use with api functions which require it 
   176                                  ; Note that as of 32-bit Windows, an instance handle (HINSTANCE), such as the
   177                                  ; application instance handle exposed by system function call of WinMain, and
   178                                  ; a module handle (HMODULE) are the same thing.
   179 00000075 E8CA060000                  call GetLastError__prologue_reset
   180                                      ; MS __fastcall x64 ABI
   181 0000007A 4883EC28                    sub rsp, 40 ; allocate shadow space
   182 0000007E B900000000                  mov dword ecx, 0 ; 1st = NULL LPCSTR lpModuleName
   183 00000083 E8(00000000)            call GetModuleHandleA
   184 00000088 48890425[E4010000]          mov qword [GetModuleHandleA__hModule], rax ; return HMODULE *phModule
   185 00000090 4883C428                    add rsp, 40 ; deallocate shadow space
   186                                  
   187 00000094 E8BE060000                  call GetLastError__epilogue_check
   188                                  
   189                                  ; load references to the default icons for new windows
   190 00000099 E8A6060000                  call GetLastError__prologue_reset
   191                                      ; MS __fastcall x64 ABI
   192 0000009E 4883EC38                    sub rsp, 56 ; allocate shadow space
   193 000000A2 C744242840800000            mov dword [rsp + 40], 0x8040 ; 6th = 32832 UINT fuLoad
   194 000000AA C744242000000000            mov dword [rsp + 32], 0 ; 5th int cy
   195 000000B2 41B900000000                mov dword r9d, 0 ; 4th int cx
   196 000000B8 41B801000000                mov dword r8d, 0x1 ; 3rd = 1 UINT type
   197 000000BE BA057F0000                  mov dword edx, 0x7f05 ; 2nd = 32517 LPCSTR name
   198 000000C3 B900000000                  mov dword ecx, 0 ; 1st = NULL HINSTANCE hInst
   199 000000C8 E8(00000000)            call LoadImageA
   200 000000CD 48890425[EC010000]          mov qword [CreateWindow__icon], rax ; return HANDLE
   201 000000D5 4883C438                    add rsp, 56 ; deallocate shadow space
   202                                  
   203 000000D9 E879060000                  call GetLastError__epilogue_check
   204                                  
   205 000000DE E861060000                  call GetLastError__prologue_reset
   206                                      ; MS __fastcall x64 ABI
   207 000000E3 4883EC38                    sub rsp, 56 ; allocate shadow space
   208 000000E7 C744242840800000            mov dword [rsp + 40], 0x8040 ; 6th = 32832 UINT fuLoad
   209 000000EF C744242000000000            mov dword [rsp + 32], 0 ; 5th int cy
   210 000000F7 41B900000000                mov dword r9d, 0 ; 4th int cx
   211 000000FD 41B802000000                mov dword r8d, 0x2 ; 3rd = 2 UINT type
   212 00000103 BA007F0000                  mov dword edx, 0x7f00 ; 2nd = 32512 LPCSTR name
   213 00000108 B900000000                  mov dword ecx, 0 ; 1st = NULL HINSTANCE hInst
   214 0000010D E8(00000000)            call LoadImageA
   215 00000112 48890425[F4010000]          mov qword [CreateWindow__cursor], rax ; return HANDLE
   216 0000011A 4883C438                    add rsp, 56 ; deallocate shadow space
   217                                  
   218 0000011E E834060000                  call GetLastError__epilogue_check
   219                                  
   220                                  ; begin creating the main local application window
   221 00000123 E81C060000                  call GetLastError__prologue_reset
   222                                      ; MS __fastcall x64 ABI
   223 00000128 4883EC28                    sub rsp, 40 ; allocate shadow space
   224 0000012C 48B9-                       mov qword rcx, MainWindow ; 1st WNDCLASSEXA *Arg1
   224 0000012E [FC01000000000000] 
   225 00000136 E8(00000000)            call RegisterClassExA
   226 0000013B 48890425[4C020000]          mov qword [CreateWindow__atom_name], rax ; return HANDLE
   227 00000143 4883C428                    add rsp, 40 ; deallocate shadow space
   228                                  
   229 00000147 E80B060000                  call GetLastError__epilogue_check
   230                                  
   231 0000014C E8F3050000                  call GetLastError__prologue_reset
   232                                      ; MS __fastcall x64 ABI
   233 00000151 4883EC68                    sub rsp, 104 ; allocate shadow space
   234 00000155 48C744245800000000          mov qword [rsp + 88], 0 ; 12th = NULL LPVOID lpParam
   235 0000015E 48C7442450-                 mov qword [rsp + 80], GetModuleHandleA__hModule ; 11th HINSTANCE hInstance
   235 00000163 [E4010000]         
   236 00000167 48C744244800000000          mov qword [rsp + 72], 0 ; 10th = NULL HMENU hMenu
   237 00000170 48C744244000000000          mov qword [rsp + 64], 0 ; 9th = NULL HWND hWndParent
   238 00000179 C7442438E0010000            mov dword [rsp + 56], 0x1e0 ; 8th = 480 int nHeight
   239 00000181 C744243080020000            mov dword [rsp + 48], 0x280 ; 7th = 640 int nWidth
   240 00000189 C744242800000080            mov dword [rsp + 40], 0x80000000 ; 6th = -2147483648 int Y
   241 00000191 C744242000000080            mov dword [rsp + 32], 0x80000000 ; 5th = -2147483648 int X
   242 00000199 41B90000CF16                mov qword r9, 0x16cf0000 ; 4th = 382664704 WS_OVERLAPPED | WS_CAPTION | WS_SYSMENU | WS_THICKFRAME | WS_MINIMIZEBOX | WS_MAXIMIZEBOX | WS_VISIBLE | WS_CLIPCHILDREN | WS_CLIPSIBLINGS DWORD dwStyle
   243 0000019F 49B8-                       mov qword r8, CreateWindow__title ; 3rd LPCSTR lpWindowName
   243 000001A1 [5402000000000000] 
   244 000001A9 48BA-                       mov qword rdx, Generic__uuid ; 2nd LPCSTR lpClassName
   244 000001AB [B701000000000000] 
   245 000001B3 B900010000                  mov qword rcx, 0x100 ; 1st = 256 WS_EX_WINDOWEDGE DWORD dwExStyle
   246 000001B8 E8(00000000)            call CreateWindowExA
   247 000001BD 48890425[60020000]          mov qword [CreateWindow__hWnd], rax ; return HANDLE
   248 000001C5 4883C468                    add rsp, 104 ; deallocate shadow space
   249                                  
   250 000001C9 E889050000                  call GetLastError__epilogue_check
   251                                  
   252                                  ; begin creating the OpenGL context
   253 000001CE E871050000                  call GetLastError__prologue_reset
   254                                      ; MS __fastcall x64 ABI
   255 000001D3 4883EC28                    sub rsp, 40 ; allocate shadow space
   256 000001D7 488B0C25[60020000]          mov qword rcx, [CreateWindow__hWnd] ; 1st HWND hWnd
   257 000001DF E8(00000000)            call GetDC
   258 000001E4 48890425[68020000]          mov qword [GetDC__hDC], rax ; return HDC
   259 000001EC 4883C428                    add rsp, 40 ; deallocate shadow space
   260                                  
   261 000001F0 E862050000                  call GetLastError__epilogue_check
   262                                  
   263 000001F5 E84A050000                  call GetLastError__prologue_reset
   264                                      ; MS __fastcall x64 ABI
   265 000001FA 4883EC28                    sub rsp, 40 ; allocate shadow space
   266 000001FE 48BA-                       mov qword rdx, PixelFormat ; 2nd PIXELFORMATDESCRIPTOR *ppfd
   266 00000200 [7002000000000000] 
   267 00000208 488B0C25[68020000]          mov qword rcx, [GetDC__hDC] ; 1st HDC hdc
   268 00000210 E8(00000000)            call ChoosePixelFormat
   269 00000215 890425[98020000]            mov dword [ChoosePixelFormat__format], eax ; return int
   270 0000021C 4883C428                    add rsp, 40 ; deallocate shadow space
   271                                  
   272 00000220 E832050000                  call GetLastError__epilogue_check
   273                                  
   274 00000225 E81A050000                  call GetLastError__prologue_reset
   275                                      ; MS __fastcall x64 ABI
   276 0000022A 4883EC28                    sub rsp, 40 ; allocate shadow space
   277 0000022E 49B8-                       mov qword r8, PixelFormat ; 3rd PIXELFORMATDESCRIPTOR *ppfd
   277 00000230 [7002000000000000] 
   278 00000238 8B1425[98020000]            mov dword edx, [ChoosePixelFormat__format] ; 2nd int format
   279 0000023F 488B0C25[68020000]          mov qword rcx, [GetDC__hDC] ; 1st HDC hdc
   280 00000247 E8(00000000)            call SetPixelFormat
   281 0000024C 890425[6B010000]            mov dword [Generic__success], eax ; return BOOL
   282 00000253 4883C428                    add rsp, 40 ; deallocate shadow space
   283                                  
   284 00000257 E8FB040000                  call GetLastError__epilogue_check
   285                                  
   286                                  ; dynamically load library at runtime
   287 0000025C E8E3040000                  call GetLastError__prologue_reset
   288                                      ; MS __fastcall x64 ABI
   289 00000261 4883EC28                    sub rsp, 40 ; allocate shadow space
   290 00000265 48B9-                       mov qword rcx, LoadLibraryA__opengl32 ; 1st LPCSTR lpLibFileName
   290 00000267 [9C02000000000000] 
   291 0000026F E8(00000000)            call LoadLibraryA
   292 00000274 48890425[A9020000]          mov qword [LoadLibraryA__opengl32_hModule], rax ; return HMODULE
   293 0000027C 4883C428                    add rsp, 40 ; deallocate shadow space
   294                                  
   295 00000280 E8D2040000                  call GetLastError__epilogue_check
   296                                  
   297 00000285 E8BA040000                  call GetLastError__prologue_reset
   298                                      ; MS __fastcall x64 ABI
   299 0000028A 4883EC28                    sub rsp, 40 ; allocate shadow space
   300 0000028E BA[B1020000]                mov dword edx, GetProcAddress__wglCreateContext ; 2nd LPCSTR lpProcName
   301 00000293 488B0C25[A9020000]          mov qword rcx, [LoadLibraryA__opengl32_hModule] ; 1st HMODULE hModule
   302 0000029B E8(00000000)            call GetProcAddress
   303 000002A0 48890425[C2020000]          mov qword [wglCreateContext], rax ; return FARPROC
   304 000002A8 4883C428                    add rsp, 40 ; deallocate shadow space
   305                                  
   306 000002AC E8A6040000                  call GetLastError__epilogue_check
   307                                  
   308 000002B1 E88E040000                  call GetLastError__prologue_reset
   309                                      ; MS __fastcall x64 ABI
   310 000002B6 4883EC28                    sub rsp, 40 ; allocate shadow space
   311 000002BA BA[CA020000]                mov dword edx, GetProcAddress__wglMakeCurrent ; 2nd LPCSTR lpProcName
   312 000002BF 488B0C25[A9020000]          mov qword rcx, [LoadLibraryA__opengl32_hModule] ; 1st HMODULE hModule
   313 000002C7 E8(00000000)            call GetProcAddress
   314 000002CC 48890425[D9020000]          mov qword [wglMakeCurrent], rax ; return FARPROC
   315 000002D4 4883C428                    add rsp, 40 ; deallocate shadow space
   316                                  
   317 000002D8 E87A040000                  call GetLastError__epilogue_check
   318                                  
   319 000002DD E862040000                  call GetLastError__prologue_reset
   320                                      ; MS __fastcall x64 ABI
   321 000002E2 4883EC28                    sub rsp, 40 ; allocate shadow space
   322 000002E6 BA[E1020000]                mov dword edx, GetProcAddress__glClearColor ; 2nd LPCSTR lpProcName
   323 000002EB 488B0C25[A9020000]          mov qword rcx, [LoadLibraryA__opengl32_hModule] ; 1st HMODULE hModule
   324 000002F3 E8(00000000)            call GetProcAddress
   325 000002F8 48890425[EE020000]          mov qword [glClearColor], rax ; return FARPROC
   326 00000300 4883C428                    add rsp, 40 ; deallocate shadow space
   327                                  
   328 00000304 E84E040000                  call GetLastError__epilogue_check
   329                                  
   330 00000309 E836040000                  call GetLastError__prologue_reset
   331                                      ; MS __fastcall x64 ABI
   332 0000030E 4883EC28                    sub rsp, 40 ; allocate shadow space
   333 00000312 BA[F6020000]                mov dword edx, GetProcAddress__glClear ; 2nd LPCSTR lpProcName
   334 00000317 488B0C25[A9020000]          mov qword rcx, [LoadLibraryA__opengl32_hModule] ; 1st HMODULE hModule
   335 0000031F E8(00000000)            call GetProcAddress
   336 00000324 48890425[FE020000]          mov qword [glClear], rax ; return FARPROC
   337 0000032C 4883C428                    add rsp, 40 ; deallocate shadow space
   338                                  
   339 00000330 E822040000                  call GetLastError__epilogue_check
   340                                  
   341 00000335 E80A040000                  call GetLastError__prologue_reset
   342                                      ; MS __fastcall x64 ABI
   343 0000033A 4883EC28                    sub rsp, 40 ; allocate shadow space
   344 0000033E BA[06030000]                mov dword edx, GetProcAddress__glGetError ; 2nd LPCSTR lpProcName
   345 00000343 488B0C25[A9020000]          mov qword rcx, [LoadLibraryA__opengl32_hModule] ; 1st HMODULE hModule
   346 0000034B E8(00000000)            call GetProcAddress
   347 00000350 48890425[11030000]          mov qword [glGetError], rax ; return FARPROC
   348 00000358 4883C428                    add rsp, 40 ; deallocate shadow space
   349                                  
   350 0000035C E8F6030000                  call GetLastError__epilogue_check
   351                                  
   352 00000361 E8DE030000                  call GetLastError__prologue_reset
   353                                      ; MS __fastcall x64 ABI
   354 00000366 4883EC28                    sub rsp, 40 ; allocate shadow space
   355 0000036A BA[19030000]                mov dword edx, GetProcAddress__glGetString ; 2nd LPCSTR lpProcName
   356 0000036F 488B0C25[A9020000]          mov qword rcx, [LoadLibraryA__opengl32_hModule] ; 1st HMODULE hModule
   357 00000377 E8(00000000)            call GetProcAddress
   358 0000037C 48890425[25030000]          mov qword [glGetString], rax ; return FARPROC
   359 00000384 4883C428                    add rsp, 40 ; deallocate shadow space
   360                                  
   361 00000388 E8CA030000                  call GetLastError__epilogue_check
   362                                  
   363 0000038D E8B2030000                  call GetLastError__prologue_reset
   364                                      ; MS __fastcall x64 ABI
   365 00000392 4883EC28                    sub rsp, 40 ; allocate shadow space
   366 00000396 BA[2D030000]                mov dword edx, GetProcAddress__wglGetProcAddress ; 2nd LPCSTR lpProcName
   367 0000039B 488B0C25[A9020000]          mov qword rcx, [LoadLibraryA__opengl32_hModule] ; 1st HMODULE hModule
   368 000003A3 E8(00000000)            call GetProcAddress
   369 000003A8 48890425[3F030000]          mov qword [wglGetProcAddress], rax ; return FARPROC
   370 000003B0 4883C428                    add rsp, 40 ; deallocate shadow space
   371                                  
   372 000003B4 E89E030000                  call GetLastError__epilogue_check
   373                                  
   374                                  
   375 000003B9 E886030000                  call GetLastError__prologue_reset
   376                                      ; MS __fastcall x64 ABI
   377 000003BE 4883EC28                    sub rsp, 40 ; allocate shadow space
   378 000003C2 488B0C25[68020000]          mov qword rcx, [GetDC__hDC] ; 1st HDC Arg1
   379 000003CA FF1425[C2020000]        call [wglCreateContext]
   380 000003D1 48890425[47030000]          mov qword [wglCreateContext__ctx], rax ; return HGLRC
   381 000003D9 4883C428                    add rsp, 40 ; deallocate shadow space
   382                                  
   383 000003DD E875030000                  call GetLastError__epilogue_check
   384                                  
   385 000003E2 E85D030000                  call GetLastError__prologue_reset
   386                                      ; MS __fastcall x64 ABI
   387 000003E7 4883EC28                    sub rsp, 40 ; allocate shadow space
   388 000003EB 488B1425[47030000]          mov qword rdx, [wglCreateContext__ctx] ; 2nd HGLRC
   389 000003F3 488B0C25[68020000]          mov qword rcx, [GetDC__hDC] ; 1st HDC
   390 000003FB FF1425[D9020000]        call [wglMakeCurrent]
   391 00000402 890425[6B010000]            mov dword [Generic__success], eax ; return BOOL
   392 00000409 4883C428                    add rsp, 40 ; deallocate shadow space
   393                                  
   394 0000040D E845030000                  call GetLastError__epilogue_check
   395                                  
   396 00000412 E82D030000                  call GetLastError__prologue_reset
   397                                      ; MS __fastcall x64 ABI
   398 00000417 4883EC28                    sub rsp, 40 ; allocate shadow space
   399 0000041B B9021F0000                  mov qword rcx, 0x1f02 ; 1st = 7938 GL_VERSION GLenum name
   400 00000420 FF1425[25030000]        call [glGetString]
   401 00000427 48890425[4F030000]          mov qword [glString], rax ; return GLubyte* WINAPI
   402 0000042F 4883C428                    add rsp, 40 ; deallocate shadow space
   403                                  
   404 00000433 E81F030000                  call GetLastError__epilogue_check
   405                                  
   406                                      ; MS __fastcall x64 ABI
   407 00000438 4883EC40                    sub rsp, 64 ; allocate shadow space
   408 0000043C 48C7442430-                 mov qword [rsp + 48], glString ; 7th va_list *Arguments
   408 00000441 [4F030000]         
   409 00000445 48C744242800010000          mov qword [rsp + 40], 0x100 ; 6th = 256 DWORD nSize
   410 0000044E 48C7442420-                 mov qword [rsp + 32], FormatMessage__buffer ; 5th LPSTR lpBuffer
   410 00000453 [00000000]         
   411 00000457 41B900000000                mov dword r9d, 0 ; 4th = NULL DWORD dwLanguageId
   412 0000045D 41B800000000                mov dword r8d, 0 ; 3rd = NULL DWORD dwMessageId
   413 00000463 BA[57030000]                mov dword edx, FormatString_3 ; 2nd LPCVOID lpSource
   414 00000468 B900240000                  mov dword ecx, 0x2400 ; 1st = 9216 FORMAT_MESSAGE_ARGUMENT_ARRAY | FORMAT_MESSAGE_FROM_STRING DWORD dwFlags
   415 0000046D E8(00000000)            call FormatMessageA
   416 00000472 890425[04010000]            mov dword [FormatMessage__length], eax ; return DWORD TCHARs written
   417 00000479 4883C440                    add rsp, 64 ; deallocate shadow space
   418                                  
   419                                      ; MS __fastcall x64 ABI
   420 0000047D 4883EC30                    sub rsp, 48 ; allocate shadow space
   421 00000481 C744242000000000            mov dword [rsp + 32], 0 ; 5th = NULL LPOVERLAPPED lpOverlapped
   422 00000489 41B9[5F010000]              mov dword r9d, WriteFile__bytesWritten ; 4th LPDWORD lpNumberOfBytesWritten
   423 0000048F 448B0425[04010000]          mov dword r8d, [FormatMessage__length] ; 3rd DWORD nNumberOfBytesToWrite
   424 00000497 BA[00000000]                mov dword edx, FormatMessage__buffer ; 2nd LPCVOID lpBuffer
   425 0000049C 8B0C25[67010000]            mov dword ecx, [Console__stdout_nStdHandle] ; 1st HANDLE hFile
   426 000004A3 E8(00000000)            call WriteFile
   427 000004A8 890425[08010000]            mov dword [printf__success], eax ; return BOOL
   428 000004AF 4883C430                    add rsp, 48 ; deallocate shadow space
   429                                  
   430                                  
   431                                      ; MS __fastcall x64 ABI
   432 000004B3 4883EC28                    sub rsp, 40 ; allocate shadow space
   433 000004B7 488B0425[70030000]          mov qword rax, [F1_0]
   434 000004BF 66480F6ED8                  movq xmm3, rax ; 4th GLclampf alpha
   435 000004C4 488B0425[70030000]          mov qword rax, [F1_0]
   436 000004CC 66480F6ED0                  movq xmm2, rax ; 3rd GLclampf blue
   437 000004D1 488B0425[68030000]          mov qword rax, [F0_0]
   438 000004D9 66480F6EC8                  movq xmm1, rax ; 2nd GLclampf green
   439 000004DE 488B0425[68030000]          mov qword rax, [F0_0]
   440 000004E6 66480F6EC0                  movq xmm0, rax ; 1st GLclampf red
   441 000004EB FF1425[EE020000]        call [glClearColor]
   442 000004F2 4883C428                    add rsp, 40 ; deallocate shadow space
   443                                  
   444                                  Loop:
   445 000004F6 E849020000                  call GetLastError__prologue_reset
   446                                      ; MS __fastcall x64 ABI
   447 000004FB 4883EC30                    sub rsp, 48 ; allocate shadow space
   448 000004FF C744242001000000            mov dword [rsp + 32], 0x1 ; 5th = 1 UINT wRemoveMsg
   449 00000507 41B900000000                mov dword r9d, 0 ; 4th UINT wMsgFilterMax
   450 0000050D 41B800000000                mov dword r8d, 0 ; 3rd UINT wMsgFilterMin
   451 00000513 BA00000000                  mov qword rdx, 0 ; 2nd = NULL HWND hWnd
   452 00000518 48B9-                       mov qword rcx, IncomingMessage ; 1st LPMSG lpMsg
   452 0000051A [7803000000000000] 
   453 00000522 E8(00000000)            call PeekMessageA
   454 00000527 890425[6B010000]            mov dword [Generic__success], eax ; return BOOL
   455 0000052E 4883C430                    add rsp, 48 ; deallocate shadow space
   456                                  
   457 00000532 E820020000                  call GetLastError__epilogue_check
   458                                  
   459                                  ; if zero messages, skip handling messages
   460 00000537 833C25[6B010000]00      cmp dword [Generic__success], 0
   461 0000053F 0F8460000000            je near ..@Render
   462 00000545 833C25[80030000]12      cmp dword [IncomingMessage.message], 0x12 ; = 18 WM_QUIT
   463 0000054D 0F8510000000            jne near ..@Loop__processMessage
   464 00000553 C70425[0C010000]00-     mov dword [ExitProcess__code], 0
   464 0000055B 000000             
   465 0000055E E85A030000              call Exit
   466                                  
   467                                  
   468                                  ..@Loop__processMessage:
   469 00000563 E8DC010000                  call GetLastError__prologue_reset
   470                                      ; MS __fastcall x64 ABI
   471 00000568 4883EC28                    sub rsp, 40 ; allocate shadow space
   472 0000056C 48B9-                       mov qword rcx, IncomingMessage ; 1st LPMSG lpMsg
   472 0000056E [7803000000000000] 
   473 00000576 E8(00000000)            call TranslateMessage
   474 0000057B 4883C428                    add rsp, 40 ; deallocate shadow space
   475                                  
   476 0000057F E8D3010000                  call GetLastError__epilogue_check
   477                                  
   478 00000584 E8BB010000                  call GetLastError__prologue_reset
   479                                      ; MS __fastcall x64 ABI
   480 00000589 4883EC28                    sub rsp, 40 ; allocate shadow space
   481 0000058D 48B9-                       mov qword rcx, IncomingMessage ; 1st LPMSG lpMsg
   481 0000058F [7803000000000000] 
   482 00000597 E8(00000000)            call DispatchMessageA
   483 0000059C 4883C428                    add rsp, 40 ; deallocate shadow space
   484                                  
   485 000005A0 E8B2010000                  call GetLastError__epilogue_check
   486                                  
   487                                  ..@Render:
   488 000005A5 833C25[B3010000]01      cmp dword [Generic__shutdown], 1 ; = TRUE
   489 000005AD 0F8443FFFFFF            je near Loop
   490                                      ; MS __fastcall x64 ABI
   491 000005B3 4883EC28                    sub rsp, 40 ; allocate shadow space
   492 000005B7 B900400000                  mov dword ecx, 0x4000 ; 1st = 16384 GLbitfield mask
   493 000005BC FF1425[FE020000]        call [glClear]
   494 000005C3 4883C428                    add rsp, 40 ; deallocate shadow space
   495                                  
   496 000005C7 E878010000                  call GetLastError__prologue_reset
   497                                      ; MS __fastcall x64 ABI
   498 000005CC 4883EC28                    sub rsp, 40 ; allocate shadow space
   499 000005D0 488B0C25[68020000]          mov qword rcx, [GetDC__hDC] ; 1st HDC Arg1
   500 000005D8 E8(00000000)            call SwapBuffers
   501 000005DD 890425[6B010000]            mov dword [Generic__success], eax ; return BOOL
   502 000005E4 4883C428                    add rsp, 40 ; deallocate shadow space
   503                                  
   504 000005E8 E86A010000                  call GetLastError__epilogue_check
   505                                  
   506 000005ED E904FFFFFF              jmp near Loop
   507                                  WndProc:
   508                                  ; move local registers to local shadow space to preserve them
   509 000005F2 48890C25[A4030000]      mov qword [WndProc__hWnd], rcx
   510 000005FA 48891425[AC030000]      mov qword [WndProc__uMsg], rdx
   511 00000602 4C890425[B4030000]      mov qword [WndProc__wParam], r8
   512 0000060A 4C890C25[BC030000]      mov qword [WndProc__lParam], r9
   513                                  ; switch(uMsg) {
   514 00000612 4883FA06                cmp qword rdx, 0x6 ; = 6 WM_ACTIVATE
   515 00000616 0F8424010000            je near WndProc__return
   516 0000061C 4881FA12010000          cmp qword rdx, 0x112 ; = 274 WM_SYSCOMMAND
   517 00000623 0F84A3000000            je near ..@WM_SysCommand
   518 00000629 4883FA10                cmp qword rdx, 0x10 ; = 16 WM_CLOSE
   519 0000062D 0F84BD000000            je near ..@WM_Close
   520 00000633 4883FA02                cmp qword rdx, 0x2 ; = 2 WM_DESTROY
   521 00000637 0F84E2000000            je near ..@WM_Destroy
   522 0000063D 4881FA82000000          cmp qword rdx, 0x82 ; = 130 WM_NCDESTROY
   523 00000644 0F84F6000000            je near WndProc__return
   524 0000064A 4881FA00010000          cmp qword rdx, 0x100 ; = 256 WM_KEYDOWN
   525 00000651 0F84E9000000            je near WndProc__return
   526 00000657 4881FA01010000          cmp qword rdx, 0x101 ; = 257 WM_KEYUP
   527 0000065E 0F84DC000000            je near WndProc__return
   528 00000664 4883FA05                cmp qword rdx, 0x5 ; = 5 WM_SIZE
   529 00000668 0F84D2000000            je near WndProc__return
   530                                  ..@default:
   531                                  ; default window procedure handles messages for us
   532                                      ; MS __fastcall x64 ABI
   533 0000066E 4883EC28                    sub rsp, 40 ; allocate shadow space
   534 00000672 4C8B0C25[BC030000]          mov qword r9, [WndProc__lParam] ; 4th LPARAM lParam
   535 0000067A 4C8B0425[B4030000]          mov qword r8, [WndProc__wParam] ; 3rd WPARAM wParam
   536 00000682 488B1425[AC030000]          mov qword rdx, [WndProc__uMsg] ; 2nd UINT Msg
   537 0000068A 488B0C25[A4030000]          mov qword rcx, [WndProc__hWnd] ; 1st HWND hWnd
   538 00000692 E8(00000000)            call DefWindowProcA
   539 00000697 48890425[6B010000]          mov qword [Generic__success], rax ; return LRESULT
   540 0000069F 4883C428                    add rsp, 40 ; deallocate shadow space
   541                                  
   542 000006A3 833C25[B3010000]01      cmp dword [Generic__shutdown], 1 ; = TRUE
   543 000006AB 0F8512000000            jne near ..@dont_clear
   544                                      ; MS __fastcall x64 ABI
   545 000006B1 4883EC28                    sub rsp, 40 ; allocate shadow space
   546 000006B5 B900000000                  mov dword ecx, 0 ; 1st DWORD dwErrCode
   547 000006BA E8(00000000)            call SetLastError
   548 000006BF 4883C428                    add rsp, 40 ; deallocate shadow space
   549                                  
   550                                  ..@dont_clear:
   551 000006C3 488B0425[6B010000]      mov qword rax, [Generic__success] ; return 
   552 000006CB C3                      ret
   553                                  ..@WM_SysCommand:
   554 000006CC 8B1C25[B4030000]        mov dword ebx, [WndProc__wParam]
   555 000006D3 81FB40F10000            cmp dword ebx, 0xf140 ; = 61760
   556 000006D9 0F8461000000            je near WndProc__return
   557 000006DF 81FB70F10000            cmp dword ebx, 0xf170 ; = 61808
   558 000006E5 0F8455000000            je near WndProc__return
   559 000006EB E97EFFFFFF              jmp near ..@default
   560                                  ..@WM_Close:
   561 000006F0 C70425[B3010000]01-     mov dword [Generic__shutdown], 1 ; = TRUE
   561 000006F8 000000             
   562 000006FB E844000000                  call GetLastError__prologue_reset
   563                                      ; MS __fastcall x64 ABI
   564 00000700 4883EC28                    sub rsp, 40 ; allocate shadow space
   565 00000704 488B0C25[60020000]          mov qword rcx, [CreateWindow__hWnd] ; 1st HWND hWnd
   566 0000070C E8(00000000)            call DestroyWindow
   567 00000711 4883C428                    add rsp, 40 ; deallocate shadow space
   568                                  
   569 00000715 E83D000000                  call GetLastError__epilogue_check
   570                                  
   571 0000071A E921000000              jmp near WndProc__return
   572                                  ..@WM_Destroy:
   573 0000071F E820000000                  call GetLastError__prologue_reset
   574                                      ; MS __fastcall x64 ABI
   575 00000724 4883EC28                    sub rsp, 40 ; allocate shadow space
   576 00000728 B900000000                  mov dword ecx, 0 ; 1st int nExitCode
   577 0000072D E8(00000000)            call PostQuitMessage
   578 00000732 4883C428                    add rsp, 40 ; deallocate shadow space
   579                                  
   580 00000736 E81C000000                  call GetLastError__epilogue_check
   581                                  
   582 0000073B E900000000              jmp near WndProc__return
   583                                  WndProc__return:
   584 00000740 4831C0                  xor rax, rax ; return NULL
   585 00000743 C3                      ret
   586                                  GetLastError__prologue_reset:
   587                                      ; MS __fastcall x64 ABI
   588 00000744 4883EC28                    sub rsp, 40 ; allocate shadow space
   589 00000748 B900000000                  mov dword ecx, 0 ; 1st DWORD dwErrCode
   590 0000074D E8(00000000)            call SetLastError
   591 00000752 4883C428                    add rsp, 40 ; deallocate shadow space
   592                                  
   593 00000756 C3                      ret
   594                                  
   595                                  GetLastError__epilogue_check:
   596 00000757 83F800                  cmp dword eax, 0
   597 0000075A 0F8401000000            je near GetLastError__epilogue_lookup
   598 00000760 C3                      ret
   599                                  
   600                                  GetLastError__epilogue_lookup:
   601                                      ; MS __fastcall x64 ABI
   602 00000761 4883EC28                    sub rsp, 40 ; allocate shadow space
   603 00000765 E8(00000000)            call GetLastError
   604 0000076A 890425[00010000]            mov dword [GetLastError__errCode], eax ; return DWORD dwErrCode
   605 00000771 4883C428                    add rsp, 40 ; deallocate shadow space
   606                                  
   607 00000775 83F800                  cmp dword eax, 0
   608 00000778 0F8501000000            jne near ..@error
   609 0000077E C3                      ret
   610                                  
   611                                  ..@error:
   612                                      ; MS __fastcall x64 ABI
   613 0000077F 4883EC40                    sub rsp, 64 ; allocate shadow space
   614 00000783 48C744243000000000          mov qword [rsp + 48], 0 ; 7th = NULL va_list *Arguments
   615 0000078C 48C744242800010000          mov qword [rsp + 40], 0x100 ; 6th = 256 DWORD nSize
   616 00000795 48C7442420-                 mov qword [rsp + 32], FormatMessage__buffer ; 5th LPSTR lpBuffer
   616 0000079A [00000000]         
   617 0000079E 41B900040000                mov dword r9d, 0x400 ; 4th = 1024 LANG_USER_DEFAULT__SUBLANG_DEFAULT DWORD dwLanguageId
   618 000007A4 448B0425[00010000]          mov dword r8d, [GetLastError__errCode] ; 3rd DWORD dwMessageId
   619 000007AC BA00000000                  mov dword edx, 0 ; 2nd = NULL LPCVOID lpSource
   620 000007B1 B900120000                  mov dword ecx, 0x1200 ; 1st = 4608 FORMAT_MESSAGE_FROM_SYSTEM | FORMAT_MESSAGE_IGNORE_INSERTS DWORD dwFlags
   621 000007B6 E8(00000000)            call FormatMessageA
   622 000007BB 890425[04010000]            mov dword [FormatMessage__length], eax ; return DWORD TCHARs written
   623 000007C2 4883C440                    add rsp, 64 ; deallocate shadow space
   624                                  
   625                                      ; MS __fastcall x64 ABI
   626 000007C6 4883EC30                    sub rsp, 48 ; allocate shadow space
   627 000007CA C744242000000000            mov dword [rsp + 32], 0 ; 5th = NULL LPOVERLAPPED lpOverlapped
   628 000007D2 41B9[5F010000]              mov dword r9d, WriteFile__bytesWritten ; 4th LPDWORD lpNumberOfBytesWritten
   629 000007D8 448B0425[04010000]          mov dword r8d, [FormatMessage__length] ; 3rd DWORD nNumberOfBytesToWrite
   630 000007E0 BA[00000000]                mov dword edx, FormatMessage__buffer ; 2nd LPCVOID lpBuffer
   631 000007E5 8B0C25[67010000]            mov dword ecx, [Console__stdout_nStdHandle] ; 1st HANDLE hFile
   632 000007EC E8(00000000)            call WriteFile
   633 000007F1 890425[08010000]            mov dword [printf__success], eax ; return BOOL
   634 000007F8 4883C430                    add rsp, 48 ; deallocate shadow space
   635                                  
   636                                  
   637 000007FC 8B0425[00010000]        mov dword eax, [GetLastError__errCode]
   638 00000803 890425[0C010000]        mov dword [ExitProcess__code], eax
   639 0000080A E8AE000000              call Exit
   640                                  
   641                                  
   642                                  GetLastError__epilogue_glGetError:
   643                                      ; MS __fastcall x64 ABI
   644 0000080F 4883EC28                    sub rsp, 40 ; allocate shadow space
   645 00000813 FF1425[11030000]        call [glGetError]
   646 0000081A 890425[10010000]            mov dword [glGetError__code], eax ; return GLenum errCode
   647 00000821 4883C428                    add rsp, 40 ; deallocate shadow space
   648                                  
   649 00000825 83F800                  cmp dword eax, 0
   650 00000828 0F8501000000            jne near ..@glError
   651 0000082E C3                      ret
   652                                  
   653                                  ..@glError:
   654                                      ; MS __fastcall x64 ABI
   655 0000082F 4883EC40                    sub rsp, 64 ; allocate shadow space
   656 00000833 48C7442430-                 mov qword [rsp + 48], glGetError__code ; 7th va_list *Arguments
   656 00000838 [10010000]         
   657 0000083C 48C744242800010000          mov qword [rsp + 40], 0x100 ; 6th = 256 DWORD nSize
   658 00000845 48C7442420-                 mov qword [rsp + 32], FormatMessage__buffer ; 5th LPSTR lpBuffer
   658 0000084A [00000000]         
   659 0000084E 41B900000000                mov dword r9d, 0 ; 4th = NULL DWORD dwLanguageId
   660 00000854 41B800000000                mov dword r8d, 0 ; 3rd = NULL DWORD dwMessageId
   661 0000085A BA[14010000]                mov dword edx, FormatString ; 2nd LPCVOID lpSource
   662 0000085F B900240000                  mov dword ecx, 0x2400 ; 1st = 9216 FORMAT_MESSAGE_ARGUMENT_ARRAY | FORMAT_MESSAGE_FROM_STRING DWORD dwFlags
   663 00000864 E8(00000000)            call FormatMessageA
   664 00000869 890425[04010000]            mov dword [FormatMessage__length], eax ; return DWORD TCHARs written
   665 00000870 4883C440                    add rsp, 64 ; deallocate shadow space
   666                                  
   667                                      ; MS __fastcall x64 ABI
   668 00000874 4883EC30                    sub rsp, 48 ; allocate shadow space
   669 00000878 C744242000000000            mov dword [rsp + 32], 0 ; 5th = NULL LPOVERLAPPED lpOverlapped
   670 00000880 41B9[5F010000]              mov dword r9d, WriteFile__bytesWritten ; 4th LPDWORD lpNumberOfBytesWritten
   671 00000886 448B0425[04010000]          mov dword r8d, [FormatMessage__length] ; 3rd DWORD nNumberOfBytesToWrite
   672 0000088E BA[00000000]                mov dword edx, FormatMessage__buffer ; 2nd LPCVOID lpBuffer
   673 00000893 8B0C25[63010000]            mov dword ecx, [Console__stderr_nStdHandle] ; 1st HANDLE hFile
   674 0000089A E8(00000000)            call WriteFile
   675 0000089F 890425[08010000]            mov dword [printf__success], eax ; return BOOL
   676 000008A6 4883C430                    add rsp, 48 ; deallocate shadow space
   677                                  
   678                                  
   679 000008AA 8B0425[10010000]        mov dword eax, [glGetError__code]
   680 000008B1 890425[0C010000]        mov dword [ExitProcess__code], eax
   681 000008B8 E800000000              call Exit
   682                                  
   683                                  
   684                                  Exit:
   685                                      ; MS __fastcall x64 ABI
   686 000008BD 4883EC40                    sub rsp, 64 ; allocate shadow space
   687 000008C1 48C744243000000000          mov qword [rsp + 48], 0 ; 7th = NULL va_list *Arguments
   688 000008CA 48C744242800010000          mov qword [rsp + 40], 0x100 ; 6th = 256 DWORD nSize
   689 000008D3 48C7442420-                 mov qword [rsp + 32], FormatMessage__buffer ; 5th LPSTR lpBuffer
   689 000008D8 [00000000]         
   690 000008DC 41B900000000                mov dword r9d, 0 ; 4th = NULL DWORD dwLanguageId
   691 000008E2 41B800000000                mov dword r8d, 0 ; 3rd = NULL DWORD dwMessageId
   692 000008E8 BA[28010000]                mov dword edx, FormatString_1 ; 2nd LPCVOID lpSource
   693 000008ED B900240000                  mov dword ecx, 0x2400 ; 1st = 9216 FORMAT_MESSAGE_ARGUMENT_ARRAY | FORMAT_MESSAGE_FROM_STRING DWORD dwFlags
   694 000008F2 E8(00000000)            call FormatMessageA
   695 000008F7 890425[04010000]            mov dword [FormatMessage__length], eax ; return DWORD TCHARs written
   696 000008FE 4883C440                    add rsp, 64 ; deallocate shadow space
   697                                  
   698                                      ; MS __fastcall x64 ABI
   699 00000902 4883EC30                    sub rsp, 48 ; allocate shadow space
   700 00000906 C744242000000000            mov dword [rsp + 32], 0 ; 5th = NULL LPOVERLAPPED lpOverlapped
   701 0000090E 41B9[5F010000]              mov dword r9d, WriteFile__bytesWritten ; 4th LPDWORD lpNumberOfBytesWritten
   702 00000914 448B0425[04010000]          mov dword r8d, [FormatMessage__length] ; 3rd DWORD nNumberOfBytesToWrite
   703 0000091C BA[00000000]                mov dword edx, FormatMessage__buffer ; 2nd LPCVOID lpBuffer
   704 00000921 8B0C25[67010000]            mov dword ecx, [Console__stdout_nStdHandle] ; 1st HANDLE hFile
   705 00000928 E8(00000000)            call WriteFile
   706 0000092D 890425[08010000]            mov dword [printf__success], eax ; return BOOL
   707 00000934 4883C430                    add rsp, 48 ; deallocate shadow space
   708                                  
   709                                  
   710                                      ; MS __fastcall x64 ABI
   711 00000938 4883EC28                    sub rsp, 40 ; allocate shadow space
   712 0000093C 488B0C25[0C010000]          mov qword rcx, [ExitProcess__code] ; 1st UINT uExitCode
   713 00000944 E8(00000000)            call ExitProcess
   714 00000949 4883C428                    add rsp, 40 ; deallocate shadow space
   715                                  
   716                                      ; MS __fastcall x64 ABI
   717 0000094D 4883EC40                    sub rsp, 64 ; allocate shadow space
   718 00000951 48C744243000000000          mov qword [rsp + 48], 0 ; 7th = NULL va_list *Arguments
   719 0000095A 48C744242800010000          mov qword [rsp + 40], 0x100 ; 6th = 256 DWORD nSize
   720 00000963 48C7442420-                 mov qword [rsp + 32], FormatMessage__buffer ; 5th LPSTR lpBuffer
   720 00000968 [00000000]         
   721 0000096C 41B900000000                mov dword r9d, 0 ; 4th = NULL DWORD dwLanguageId
   722 00000972 41B800000000                mov dword r8d, 0 ; 3rd = NULL DWORD dwMessageId
   723 00000978 BA[45010000]                mov dword edx, FormatString_2 ; 2nd LPCVOID lpSource
   724 0000097D B900240000                  mov dword ecx, 0x2400 ; 1st = 9216 FORMAT_MESSAGE_ARGUMENT_ARRAY | FORMAT_MESSAGE_FROM_STRING DWORD dwFlags
   725 00000982 E8(00000000)            call FormatMessageA
   726 00000987 890425[04010000]            mov dword [FormatMessage__length], eax ; return DWORD TCHARs written
   727 0000098E 4883C440                    add rsp, 64 ; deallocate shadow space
   728                                  
   729                                      ; MS __fastcall x64 ABI
   730 00000992 4883EC30                    sub rsp, 48 ; allocate shadow space
   731 00000996 C744242000000000            mov dword [rsp + 32], 0 ; 5th = NULL LPOVERLAPPED lpOverlapped
   732 0000099E 41B9[5F010000]              mov dword r9d, WriteFile__bytesWritten ; 4th LPDWORD lpNumberOfBytesWritten
   733 000009A4 448B0425[04010000]          mov dword r8d, [FormatMessage__length] ; 3rd DWORD nNumberOfBytesToWrite
   734 000009AC BA[00000000]                mov dword edx, FormatMessage__buffer ; 2nd LPCVOID lpBuffer
   735 000009B1 8B0C25[67010000]            mov dword ecx, [Console__stdout_nStdHandle] ; 1st HANDLE hFile
   736 000009B8 E8(00000000)            call WriteFile
   737 000009BD 890425[08010000]            mov dword [printf__success], eax ; return BOOL
   738 000009C4 4883C430                    add rsp, 48 ; deallocate shadow space
   739                                  
   740                                  
   741 000009C8 C3                      ret
   742 000009C9 E9EFFEFFFF              jmp near Exit
   743                                  
   744                                  
